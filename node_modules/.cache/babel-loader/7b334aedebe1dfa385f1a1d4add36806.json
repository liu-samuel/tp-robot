{"ast":null,"code":"'use strict';\n/**\n * A {@link Timeout} represents a resettable and clearable timeout.\n */\n\nvar Timeout =\n/** @class */\nfunction () {\n  /**\n   * Construct a {@link Timeout}.\n   * @param {function} fn - Function to call\n   * @param {number} delay - Delay in milliseconds\n   * @param {boolean} [autoStart=true] - If true, then start the {@link Timeout}.\n   */\n  function Timeout(fn, delay, autoStart) {\n    if (autoStart === void 0) {\n      autoStart = true;\n    }\n\n    Object.defineProperties(this, {\n      _delay: {\n        value: delay,\n        writable: true\n      },\n      _fn: {\n        value: fn\n      },\n      _timeout: {\n        value: null,\n        writable: true\n      }\n    });\n\n    if (autoStart) {\n      this.start();\n    }\n  }\n\n  Object.defineProperty(Timeout.prototype, \"delay\", {\n    /**\n     * The {@link Timeout} delay in milliseconds.\n     * @property {number}\n     */\n    get: function get() {\n      return this._delay;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Timeout.prototype, \"isSet\", {\n    /**\n     * Whether the {@link Timeout} is set.\n     * @property {boolean}\n     */\n    get: function get() {\n      return !!this._timeout;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\n   * Update the {@link Timeout} delay.\n   * @param {number} delay\n   * @returns {void}\n   */\n\n  Timeout.prototype.setDelay = function (delay) {\n    this._delay = delay;\n  };\n  /**\n   * Start the {@link Timeout}, if not already started.\n   * @returns {void}\n   */\n\n\n  Timeout.prototype.start = function () {\n    var _this = this;\n\n    if (!this.isSet) {\n      this._timeout = setTimeout(function () {\n        var fn = _this._fn;\n\n        _this.clear();\n\n        fn();\n      }, this._delay);\n    }\n  };\n  /**\n   * Clear the {@link Timeout}.\n   * @returns {void}\n   */\n\n\n  Timeout.prototype.clear = function () {\n    clearTimeout(this._timeout);\n    this._timeout = null;\n  };\n  /**\n   * Reset the {@link Timeout}.\n   * @returns {void}\n   */\n\n\n  Timeout.prototype.reset = function () {\n    this.clear();\n    this.start();\n  };\n\n  return Timeout;\n}();\n\nmodule.exports = Timeout;","map":{"version":3,"mappings":"AAAA;AAEA;;;;AAGA;AAAA;AAAA;EACE;;;;;;EAMA,iBAAYA,EAAZ,EAAgBC,KAAhB,EAAuBC,SAAvB,EAAuC;IAAhB;MAAAA;IAAgB;;IACrCC,MAAM,CAACC,gBAAP,CAAwB,IAAxB,EAA8B;MAC5BC,MAAM,EAAE;QACNC,KAAK,EAAEL,KADD;QAENM,QAAQ,EAAE;MAFJ,CADoB;MAK5BC,GAAG,EAAE;QACHF,KAAK,EAAEN;MADJ,CALuB;MAQ5BS,QAAQ,EAAE;QACRH,KAAK,EAAE,IADC;QAERC,QAAQ,EAAE;MAFF;IARkB,CAA9B;;IAcA,IAAIL,SAAJ,EAAe;MACb,KAAKQ,KAAL;IACD;EACF;;EAMDP,sBAAIQ,iBAAJ,EAAI,OAAJ,EAAS;IAJT;;;;SAIA;MACE,OAAO,KAAKN,MAAZ;IACD,CAFQ;qBAAA;;EAAA,CAAT;EAQAF,sBAAIQ,iBAAJ,EAAI,OAAJ,EAAS;IAJT;;;;SAIA;MACE,OAAO,CAAC,CAAC,KAAKF,QAAd;IACD,CAFQ;qBAAA;;EAAA,CAAT;EAIA;;;;;;EAKAE,uCAASV,KAAT,EAAc;IACZ,KAAKI,MAAL,GAAcJ,KAAd;EACD,CAFD;EAIA;;;;;;EAIAU;IAAA;;IACE,IAAI,CAAC,KAAKC,KAAV,EAAiB;MACf,KAAKH,QAAL,GAAgBI,UAAU,CAAC;QACzB,IAAMb,EAAE,GAAGc,KAAI,CAACN,GAAhB;;QACAM,KAAI,CAACC,KAAL;;QACAf,EAAE;MACH,CAJyB,EAIvB,KAAKK,MAJkB,CAA1B;IAKD;EACF,CARD;EAUA;;;;;;EAIAM;IACEK,YAAY,CAAC,KAAKP,QAAN,CAAZ;IACA,KAAKA,QAAL,GAAgB,IAAhB;EACD,CAHD;EAKA;;;;;;EAIAE;IACE,KAAKI,KAAL;IACA,KAAKL,KAAL;EACD,CAHD;;EAIF;AAAC,CAnFD;;AAqFAO,MAAM,CAACC,OAAP,GAAiBP,OAAjB","names":["fn","delay","autoStart","Object","defineProperties","_delay","value","writable","_fn","_timeout","start","Timeout","isSet","setTimeout","_this","clear","clearTimeout","module","exports"],"sources":["/home/samliu/repos/ieee/tp-robot/node_modules/twilio-video/lib/util/timeout.js"],"sourcesContent":["'use strict';\n\n/**\n * A {@link Timeout} represents a resettable and clearable timeout.\n */\nclass Timeout {\n  /**\n   * Construct a {@link Timeout}.\n   * @param {function} fn - Function to call\n   * @param {number} delay - Delay in milliseconds\n   * @param {boolean} [autoStart=true] - If true, then start the {@link Timeout}.\n   */\n  constructor(fn, delay, autoStart = true) {\n    Object.defineProperties(this, {\n      _delay: {\n        value: delay,\n        writable: true\n      },\n      _fn: {\n        value: fn\n      },\n      _timeout: {\n        value: null,\n        writable: true\n      }\n    });\n\n    if (autoStart) {\n      this.start();\n    }\n  }\n\n  /**\n   * The {@link Timeout} delay in milliseconds.\n   * @property {number}\n   */\n  get delay() {\n    return this._delay;\n  }\n\n  /**\n   * Whether the {@link Timeout} is set.\n   * @property {boolean}\n   */\n  get isSet() {\n    return !!this._timeout;\n  }\n\n  /**\n   * Update the {@link Timeout} delay.\n   * @param {number} delay\n   * @returns {void}\n   */\n  setDelay(delay) {\n    this._delay = delay;\n  }\n\n  /**\n   * Start the {@link Timeout}, if not already started.\n   * @returns {void}\n   */\n  start() {\n    if (!this.isSet) {\n      this._timeout = setTimeout(() => {\n        const fn = this._fn;\n        this.clear();\n        fn();\n      }, this._delay);\n    }\n  }\n\n  /**\n   * Clear the {@link Timeout}.\n   * @returns {void}\n   */\n  clear() {\n    clearTimeout(this._timeout);\n    this._timeout = null;\n  }\n\n  /**\n   * Reset the {@link Timeout}.\n   * @returns {void}\n   */\n  reset() {\n    this.clear();\n    this.start();\n  }\n}\n\nmodule.exports = Timeout;\n"]},"metadata":{},"sourceType":"script"}