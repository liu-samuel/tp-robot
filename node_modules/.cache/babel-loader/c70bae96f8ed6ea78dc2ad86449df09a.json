{"ast":null,"code":"/* eslint-disable no-console */\n'use strict';\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar EventEmitter = require('events').EventEmitter;\n\nvar VALID_GROUPS = ['signaling', 'room', 'media', 'quality', 'video-processor', 'preflight'];\nvar VALID_LEVELS = ['debug', 'error', 'info', 'warning'];\n/**\n * EventObserver listens to SDK events and re-emits them on the\n * @link EventListener} with some additional information.\n * @extends EventEmitter\n * @emits EventObserver#event\n */\n\nvar EventObserver =\n/** @class */\nfunction (_super) {\n  __extends(EventObserver, _super);\n  /**\n   * Constructor.\n   * @param {InsightsPublisher} publisher\n   * @param {number} connectTimestamp\n   * @param {Log} log\n   * @param {EventListener} [eventListener]\n   */\n\n\n  function EventObserver(publisher, connectTimestamp, log, eventListener) {\n    if (eventListener === void 0) {\n      eventListener = null;\n    }\n\n    var _this = _super.call(this) || this;\n\n    _this.on('event', function (_a) {\n      var name = _a.name,\n          group = _a.group,\n          level = _a.level,\n          payload = _a.payload;\n\n      if (typeof name !== 'string') {\n        log.error('Unexpected name: ', name);\n        throw new Error('Unexpected name: ', name);\n      }\n\n      if (!VALID_GROUPS.includes(group)) {\n        log.error('Unexpected group: ', group);\n        throw new Error('Unexpected group: ', group);\n      }\n\n      if (!VALID_LEVELS.includes(level)) {\n        log.error('Unexpected level: ', level);\n        throw new Error('Unexpected level: ', level);\n      }\n\n      var timestamp = Date.now();\n      var elapsedTime = timestamp - connectTimestamp;\n      var publisherPayload = Object.assign({\n        elapsedTime: elapsedTime,\n        level: level\n      }, payload ? payload : {});\n      publisher.publish(group, name, publisherPayload);\n      var event = Object.assign({\n        elapsedTime: elapsedTime,\n        group: group,\n        level: level,\n        name: name,\n        timestamp: timestamp\n      }, payload ? {\n        payload: payload\n      } : {});\n      var logLevel = {\n        debug: 'debug',\n        error: 'error',\n        info: 'info',\n        warning: 'warn'\n      }[level];\n      log[logLevel]('event', event);\n\n      if (eventListener && group === 'signaling') {\n        eventListener.emit('event', event);\n      }\n    });\n\n    return _this;\n  }\n\n  return EventObserver;\n}(EventEmitter);\n/**\n * An SDK event.\n * @event EventObserver#event\n * @param {{name: string, payload: *}} event\n */\n\n\nmodule.exports = EventObserver;","map":{"version":3,"mappings":"AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEQ,gBAAY,GAAKA,OAAO,CAAC,QAAD,CAAP,CAAiBC,YAAlC;;AAER,IAAMC,YAAY,GAAG,CACnB,WADmB,EAEnB,MAFmB,EAGnB,OAHmB,EAInB,SAJmB,EAKnB,iBALmB,EAMnB,WANmB,CAArB;AASA,IAAMC,YAAY,GAAG,CACnB,OADmB,EAEnB,OAFmB,EAGnB,MAHmB,EAInB,SAJmB,CAArB;AAOA;;;;;;;AAMA;AAAA;AAAA;EAA4BC;EAC1B;;;;;;;;;EAOA,uBAAYC,SAAZ,EAAuBC,gBAAvB,EAAyCC,GAAzC,EAA8CC,aAA9C,EAAkE;IAApB;MAAAA;IAAoB;;IAAlE,YACEC,qBAAO,IADT;;IAEEC,KAAI,CAACC,EAAL,CAAQ,OAAR,EAAiB,UAACC,EAAD,EAAgC;UAA7BC,IAAI;UAAEC,KAAK;UAAEC,KAAK;UAAEC,OAAO;;MAC7C,IAAI,OAAOH,IAAP,KAAgB,QAApB,EAA8B;QAC5BN,GAAG,CAACU,KAAJ,CAAU,mBAAV,EAA+BJ,IAA/B;QACA,MAAM,IAAIK,KAAJ,CAAU,mBAAV,EAA+BL,IAA/B,CAAN;MACD;;MAED,IAAI,CAACX,YAAY,CAACiB,QAAb,CAAsBL,KAAtB,CAAL,EAAmC;QACjCP,GAAG,CAACU,KAAJ,CAAU,oBAAV,EAAgCH,KAAhC;QACA,MAAM,IAAII,KAAJ,CAAU,oBAAV,EAAgCJ,KAAhC,CAAN;MACD;;MAED,IAAI,CAACX,YAAY,CAACgB,QAAb,CAAsBJ,KAAtB,CAAL,EAAmC;QACjCR,GAAG,CAACU,KAAJ,CAAU,oBAAV,EAAgCF,KAAhC;QACA,MAAM,IAAIG,KAAJ,CAAU,oBAAV,EAAgCH,KAAhC,CAAN;MACD;;MAED,IAAMK,SAAS,GAAGC,IAAI,CAACC,GAAL,EAAlB;MACA,IAAMC,WAAW,GAAGH,SAAS,GAAGd,gBAAhC;MAEA,IAAMkB,gBAAgB,GAAGC,MAAM,CAACC,MAAP,CAAc;QAAEH,WAAW,aAAb;QAAeR,KAAK;MAApB,CAAd,EAAsCC,OAAO,GAAGA,OAAH,GAAa,EAA1D,CAAzB;MACAX,SAAS,CAACsB,OAAV,CAAkBb,KAAlB,EAAyBD,IAAzB,EAA+BW,gBAA/B;MAEA,IAAMI,KAAK,GAAGH,MAAM,CAACC,MAAP,CAAc;QAC1BH,WAAW,aADe;QAE1BT,KAAK,OAFqB;QAG1BC,KAAK,OAHqB;QAI1BF,IAAI,MAJsB;QAK1BO,SAAS;MALiB,CAAd,EAMXJ,OAAO,GAAG;QAAEA,OAAO;MAAT,CAAH,GAAiB,EANb,CAAd;MAQA,IAAMa,QAAQ,GAAG;QACfC,KAAK,EAAE,OADQ;QAEfb,KAAK,EAAE,OAFQ;QAGfc,IAAI,EAAE,MAHS;QAIfC,OAAO,EAAE;MAJM,EAKfjB,KALe,CAAjB;MAMAR,GAAG,CAACsB,QAAD,CAAH,CAAc,OAAd,EAAuBD,KAAvB;;MAEA,IAAIpB,aAAa,IAAIM,KAAK,KAAK,WAA/B,EAA4C;QAC1CN,aAAa,CAACyB,IAAd,CAAmB,OAAnB,EAA4BL,KAA5B;MACD;IACF,CAzCD;;;EA0CD;;EACH;AAAC,CArDD,CAA4B3B,YAA5B;AAuDA;;;;;;;AAMAiC,MAAM,CAACC,OAAP,GAAiBC,aAAjB","names":["require","EventEmitter","VALID_GROUPS","VALID_LEVELS","__extends","publisher","connectTimestamp","log","eventListener","_super","_this","on","_a","name","group","level","payload","error","Error","includes","timestamp","Date","now","elapsedTime","publisherPayload","Object","assign","publish","event","logLevel","debug","info","warning","emit","module","exports","EventObserver"],"sources":["/home/samliu/repos/ieee/twilio-video-starter-kit/node_modules/twilio-video/lib/util/eventobserver.js"],"sourcesContent":["/* eslint-disable no-console */\n'use strict';\n\nconst { EventEmitter } = require('events');\n\nconst VALID_GROUPS = [\n  'signaling',\n  'room',\n  'media',\n  'quality',\n  'video-processor',\n  'preflight'\n];\n\nconst VALID_LEVELS = [\n  'debug',\n  'error',\n  'info',\n  'warning'\n];\n\n/**\n * EventObserver listens to SDK events and re-emits them on the\n * @link EventListener} with some additional information.\n * @extends EventEmitter\n * @emits EventObserver#event\n */\nclass EventObserver extends EventEmitter {\n  /**\n   * Constructor.\n   * @param {InsightsPublisher} publisher\n   * @param {number} connectTimestamp\n   * @param {Log} log\n   * @param {EventListener} [eventListener]\n   */\n  constructor(publisher, connectTimestamp, log, eventListener = null) {\n    super();\n    this.on('event', ({ name, group, level, payload }) => {\n      if (typeof name !== 'string') {\n        log.error('Unexpected name: ', name);\n        throw new Error('Unexpected name: ', name);\n      }\n\n      if (!VALID_GROUPS.includes(group)) {\n        log.error('Unexpected group: ', group);\n        throw new Error('Unexpected group: ', group);\n      }\n\n      if (!VALID_LEVELS.includes(level)) {\n        log.error('Unexpected level: ', level);\n        throw new Error('Unexpected level: ', level);\n      }\n\n      const timestamp = Date.now();\n      const elapsedTime = timestamp - connectTimestamp;\n\n      const publisherPayload = Object.assign({ elapsedTime, level }, payload ? payload : {});\n      publisher.publish(group, name, publisherPayload);\n\n      const event = Object.assign({\n        elapsedTime,\n        group,\n        level,\n        name,\n        timestamp\n      }, payload ? { payload } : {});\n\n      const logLevel = {\n        debug: 'debug',\n        error: 'error',\n        info: 'info',\n        warning: 'warn',\n      }[level];\n      log[logLevel]('event', event);\n\n      if (eventListener && group === 'signaling') {\n        eventListener.emit('event', event);\n      }\n    });\n  }\n}\n\n/**\n * An SDK event.\n * @event EventObserver#event\n * @param {{name: string, payload: *}} event\n */\n\nmodule.exports = EventObserver;\n"]},"metadata":{},"sourceType":"script"}