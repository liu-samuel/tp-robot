{"ast":null,"code":"'use strict';\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {\n      ar.push(r.value);\n    }\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nvar __spreadArray = this && this.__spreadArray || function (to, from) {\n  for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) {\n    to[j] = from[i];\n  }\n\n  return to;\n};\n\nvar _a = require('../../util/constants'),\n    E = _a.typeErrors,\n    trackPriority = _a.trackPriority;\n\nvar _b = require('../../webrtc/util'),\n    guessBrowser = _b.guessBrowser,\n    isIOSChrome = _b.isIOSChrome;\n\nvar documentVisibilityMonitor = require('../../util/documentvisibilitymonitor.js');\n\nfunction mixinRemoteMediaTrack(AudioOrVideoTrack) {\n  /**\n   * A {@link RemoteMediaTrack} represents a {@link MediaTrack} published to a\n   * {@link Room} by a {@link RemoteParticipant}.\n   * @property {boolean} isEnabled - Whether the {@link RemoteMediaTrack} is enabled\n   * @property {boolean} isSwitchedOff - Whether the {@link RemoteMediaTrack} is switched off\n   * @property {Track.SID} sid - The SID assigned to the {@link RemoteMediaTrack}\n   * @property {?Track.Priority} priority - The subscribe priority of the {@link RemoteMediaTrack}\n   * @emits RemoteMediaTrack#disabled\n   * @emits RemoteMediaTrack#enabled\n   * @emits RemoteMediaTrack#switchedOff\n   * @emits RemoteMediaTrack#switchedOn\n   */\n  return (\n    /** @class */\n    function (_super) {\n      __extends(RemoteMediaTrack, _super);\n      /**\n       * Construct a {@link RemoteMediaTrack}.\n       * @param {Track.SID} sid\n       * @param {MediaTrackReceiver} mediaTrackReceiver\n       * @param {boolean} isEnabled\n        @param {boolean} isSwitchedOff\n       * @param {function(?Track.Priority): void} setPriority - Set or clear the subscribe\n       *  {@link Track.Priority} of the {@link RemoteMediaTrack}\n       * @param {function(ClientRenderHint): void} setRenderHint - Set render hints.\n       * @param {{log: Log, name: ?string}} options\n       */\n\n\n      function RemoteMediaTrack(sid, mediaTrackReceiver, isEnabled, isSwitchedOff, setPriority, setRenderHint, options) {\n        var _this = this;\n\n        options = Object.assign({\n          // NOTE(mpatwardhan): WebKit bug: 212780 sometimes causes the audio/video elements to stay paused when safari\n          // regains foreground. To workaround it, when safari gains foreground - we will play any elements that were\n          // playing before safari lost foreground.\n          workaroundWebKitBug212780: (guessBrowser() === 'safari' || isIOSChrome()) && typeof document === 'object' && typeof document.addEventListener === 'function' && typeof document.visibilityState === 'string'\n        }, options);\n        _this = _super.call(this, mediaTrackReceiver, options) || this;\n        Object.defineProperties(_this, {\n          _isEnabled: {\n            value: isEnabled,\n            writable: true\n          },\n          _isSwitchedOff: {\n            value: isSwitchedOff,\n            writable: true\n          },\n          _priority: {\n            value: null,\n            writable: true\n          },\n          _setPriority: {\n            value: setPriority\n          },\n          _setRenderHint: {\n            value: function value(renderHint) {\n              _this._log.debug('updating render hint:', renderHint);\n\n              setRenderHint(renderHint);\n            }\n          },\n          isEnabled: {\n            enumerable: true,\n            get: function get() {\n              return this._isEnabled;\n            }\n          },\n          isSwitchedOff: {\n            enumerable: true,\n            get: function get() {\n              return this._isSwitchedOff;\n            }\n          },\n          priority: {\n            enumerable: true,\n            get: function get() {\n              return this._priority;\n            }\n          },\n          sid: {\n            enumerable: true,\n            value: sid\n          },\n          _workaroundWebKitBug212780: {\n            value: options.workaroundWebKitBug212780\n          },\n          _workaroundWebKitBug212780Cleanup: {\n            value: null,\n            writable: true\n          }\n        });\n        return _this;\n      }\n      /**\n       * Update the subscribe {@link Track.Priority} of the {@link RemoteMediaTrack}.\n       * @param {?Track.Priority} priority - the new subscribe {@link Track.Priority};\n       *   If <code>null</code>, then the subscribe {@link Track.Priority} is cleared, which\n       *   means the {@link Track.Priority} set by the publisher is now the effective priority.\n       * @returns {this}\n       * @throws {RangeError}\n       */\n\n\n      RemoteMediaTrack.prototype.setPriority = function (priority) {\n        var priorityValues = __spreadArray([null], __read(Object.values(trackPriority)));\n\n        if (!priorityValues.includes(priority)) {\n          // eslint-disable-next-line new-cap\n          throw E.INVALID_VALUE('priority', priorityValues);\n        }\n\n        if (this._priority !== priority) {\n          this._priority = priority;\n\n          this._setPriority(priority);\n        }\n\n        return this;\n      };\n      /**\n       * @private\n       * @param {boolean} isEnabled\n       */\n\n\n      RemoteMediaTrack.prototype._setEnabled = function (isEnabled) {\n        if (this._isEnabled !== isEnabled) {\n          this._isEnabled = isEnabled;\n          this.emit(this._isEnabled ? 'enabled' : 'disabled', this);\n        }\n      };\n      /**\n       * @private\n       * @param {boolean} isSwitchedOff\n       */\n\n\n      RemoteMediaTrack.prototype._setSwitchedOff = function (isSwitchedOff) {\n        if (this._isSwitchedOff !== isSwitchedOff) {\n          this._isSwitchedOff = isSwitchedOff;\n          this.emit(isSwitchedOff ? 'switchedOff' : 'switchedOn', this);\n        }\n      };\n\n      RemoteMediaTrack.prototype.attach = function (el) {\n        var result = _super.prototype.attach.call(this, el);\n\n        if (this.mediaStreamTrack.enabled !== true) {\n          // NOTE(mpatwardhan): we disable mediaStreamTrack when there\n          // are no attachments to it (see notes below). Now that there\n          // are attachments re-enable the track.\n          this.mediaStreamTrack.enabled = true;\n\n          if (this.processedTrack) {\n            this.processedTrack.enabled = true;\n          } // NOTE(csantos): since remote tracks disables/enables the mediaStreamTrack,\n          // captureFrames stops along with it. We need to start it again after re-enabling.\n          // See attach/detach methods in this class and in VideoTrack class.\n\n\n          if (this.processor) {\n            this._captureFrames();\n          }\n        }\n\n        if (this._workaroundWebKitBug212780) {\n          this._workaroundWebKitBug212780Cleanup = this._workaroundWebKitBug212780Cleanup || playIfPausedWhileInBackground(this);\n        }\n\n        return result;\n      };\n\n      RemoteMediaTrack.prototype.detach = function (el) {\n        var result = _super.prototype.detach.call(this, el);\n\n        if (this._attachments.size === 0) {\n          // NOTE(mpatwardhan): chrome continues playing webrtc audio\n          // track even after audio element is removed from the DOM.\n          // https://bugs.chromium.org/p/chromium/issues/detail?id=749928\n          // to workaround: here disable the track when\n          // there are no elements attached to it.\n          this.mediaStreamTrack.enabled = false;\n\n          if (this.processedTrack) {\n            this.processedTrack.enabled = false;\n          }\n\n          if (this._workaroundWebKitBug212780Cleanup) {\n            // unhook visibility change\n            this._workaroundWebKitBug212780Cleanup();\n\n            this._workaroundWebKitBug212780Cleanup = null;\n          }\n        }\n\n        return result;\n      };\n\n      return RemoteMediaTrack;\n    }(AudioOrVideoTrack)\n  );\n}\n\nfunction playIfPausedWhileInBackground(remoteMediaTrack) {\n  var log = remoteMediaTrack._log,\n      kind = remoteMediaTrack.kind;\n\n  function onVisibilityChanged(isVisible) {\n    if (!isVisible) {\n      return;\n    }\n\n    remoteMediaTrack._attachments.forEach(function (el) {\n      var shim = remoteMediaTrack._elShims.get(el);\n\n      var isInadvertentlyPaused = el.paused && shim && !shim.pausedIntentionally();\n\n      if (isInadvertentlyPaused) {\n        log.info(\"Playing inadvertently paused <\" + kind + \"> element\");\n        log.debug('Element:', el);\n        log.debug('RemoteMediaTrack:', remoteMediaTrack);\n        el.play().then(function () {\n          log.info(\"Successfully played inadvertently paused <\" + kind + \"> element\");\n          log.debug('Element:', el);\n          log.debug('RemoteMediaTrack:', remoteMediaTrack);\n        }).catch(function (err) {\n          log.warn(\"Error while playing inadvertently paused <\" + kind + \"> element:\", {\n            err: err,\n            el: el,\n            remoteMediaTrack: remoteMediaTrack\n          });\n        });\n      }\n    });\n  } // NOTE(mpatwardhan): listen for document visibility callback on phase 2.\n  // this ensures that any LocalMediaTrack's restart (which listen on phase 1) gets executed\n  // first. This order is important because we `play` tracks in the callback, and\n  // play can fail on safari if audio is not being captured.\n\n\n  documentVisibilityMonitor.onVisibilityChange(2, onVisibilityChanged);\n  return function () {\n    documentVisibilityMonitor.offVisibilityChange(2, onVisibilityChanged);\n  };\n}\n/**\n * A {@link RemoteMediaTrack} was disabled.\n * @param {RemoteMediaTrack} track - The {@link RemoteMediaTrack} that was\n *   disabled\n * @event RemoteMediaTrack#disabled\n */\n\n/**\n * A {@link RemoteMediaTrack} was enabled.\n * @param {RemoteMediaTrack} track - The {@link RemoteMediaTrack} that was\n *   enabled\n * @event RemoteMediaTrack#enabled\n */\n\n/**\n * A {@link RemoteMediaTrack} was switched off.\n * @param {RemoteMediaTrack} track - The {@link RemoteMediaTrack} that was\n *   switched off\n * @event RemoteMediaTrack#switchedOff\n */\n\n/**\n * A {@link RemoteMediaTrack} was switched on.\n * @param {RemoteMediaTrack} track - The {@link RemoteMediaTrack} that was\n *   switched on\n * @event RemoteMediaTrack#switchedOn\n */\n\n/**\n * A {@link ClientRenderHint} object specifies track dimensions and /enabled disable state.\n * This state will be used by the server(SFU) to determine bandwidth allocation for the track,\n * and turn it on or off as needed.\n * @typedef {object} ClientRenderHint\n * @property {boolean} [enabled] - track is enabled or disabled. defaults to disabled.\n * @property {VideoTrack.Dimensions} [renderDimensions] - Optional parameter to specify the desired\n *   render dimensions of {@link RemoteVideoTrack}s. This property must be specified if enabled=true\n */\n\n\nmodule.exports = mixinRemoteMediaTrack;","map":{"version":3,"mappings":"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","names":["require","E","trackPriority","guessBrowser","isIOSChrome","documentVisibilityMonitor","mixinRemoteMediaTrack","AudioOrVideoTrack","__extends","sid","mediaTrackReceiver","isEnabled","isSwitchedOff","setPriority","setRenderHint","options","Object","assign","workaroundWebKitBug212780","document","addEventListener","visibilityState","_this","defineProperties","_isEnabled","value","writable","_isSwitchedOff","_priority","_setPriority","_setRenderHint","_log","debug","renderHint","enumerable","get","priority","_workaroundWebKitBug212780","_workaroundWebKitBug212780Cleanup","RemoteMediaTrack","priorityValues","__read","values","includes","INVALID_VALUE","emit","el","result","_super","attach","call","mediaStreamTrack","enabled","processedTrack","processor","_captureFrames","playIfPausedWhileInBackground","detach","_attachments","size","remoteMediaTrack","log","kind","onVisibilityChanged","isVisible","forEach","shim","_elShims","isInadvertentlyPaused","paused","pausedIntentionally","info","play","then","catch","warn","err","onVisibilityChange","offVisibilityChange","module","exports"],"sources":["/home/samliu/repos/ieee/tp-robot/node_modules/twilio-video/lib/media/track/remotemediatrack.js"],"sourcesContent":["'use strict';\n\nconst { typeErrors: E, trackPriority } = require('../../util/constants');\nconst { guessBrowser, isIOSChrome } = require('../../webrtc/util');\nconst documentVisibilityMonitor = require('../../util/documentvisibilitymonitor.js');\n\nfunction mixinRemoteMediaTrack(AudioOrVideoTrack) {\n  /**\n   * A {@link RemoteMediaTrack} represents a {@link MediaTrack} published to a\n   * {@link Room} by a {@link RemoteParticipant}.\n   * @property {boolean} isEnabled - Whether the {@link RemoteMediaTrack} is enabled\n   * @property {boolean} isSwitchedOff - Whether the {@link RemoteMediaTrack} is switched off\n   * @property {Track.SID} sid - The SID assigned to the {@link RemoteMediaTrack}\n   * @property {?Track.Priority} priority - The subscribe priority of the {@link RemoteMediaTrack}\n   * @emits RemoteMediaTrack#disabled\n   * @emits RemoteMediaTrack#enabled\n   * @emits RemoteMediaTrack#switchedOff\n   * @emits RemoteMediaTrack#switchedOn\n   */\n  return class RemoteMediaTrack extends AudioOrVideoTrack {\n    /**\n     * Construct a {@link RemoteMediaTrack}.\n     * @param {Track.SID} sid\n     * @param {MediaTrackReceiver} mediaTrackReceiver\n     * @param {boolean} isEnabled\n      @param {boolean} isSwitchedOff\n     * @param {function(?Track.Priority): void} setPriority - Set or clear the subscribe\n     *  {@link Track.Priority} of the {@link RemoteMediaTrack}\n     * @param {function(ClientRenderHint): void} setRenderHint - Set render hints.\n     * @param {{log: Log, name: ?string}} options\n     */\n    constructor(sid, mediaTrackReceiver, isEnabled, isSwitchedOff, setPriority, setRenderHint, options) {\n      options = Object.assign({\n        // NOTE(mpatwardhan): WebKit bug: 212780 sometimes causes the audio/video elements to stay paused when safari\n        // regains foreground. To workaround it, when safari gains foreground - we will play any elements that were\n        // playing before safari lost foreground.\n        workaroundWebKitBug212780: (guessBrowser() === 'safari' || isIOSChrome())\n          && typeof document === 'object'\n          && typeof document.addEventListener === 'function'\n          && typeof document.visibilityState === 'string'\n      }, options);\n\n      super(mediaTrackReceiver, options);\n\n      Object.defineProperties(this, {\n        _isEnabled: {\n          value: isEnabled,\n          writable: true\n        },\n        _isSwitchedOff: {\n          value: isSwitchedOff,\n          writable: true\n        },\n        _priority: {\n          value: null,\n          writable: true\n        },\n        _setPriority: {\n          value: setPriority\n        },\n        _setRenderHint: {\n          value: renderHint => {\n            this._log.debug('updating render hint:', renderHint);\n            setRenderHint(renderHint);\n          }\n        },\n        isEnabled: {\n          enumerable: true,\n          get() {\n            return this._isEnabled;\n          }\n        },\n        isSwitchedOff: {\n          enumerable: true,\n          get() {\n            return this._isSwitchedOff;\n          }\n        },\n        priority: {\n          enumerable: true,\n          get() {\n            return this._priority;\n          }\n        },\n        sid: {\n          enumerable: true,\n          value: sid\n        },\n        _workaroundWebKitBug212780: {\n          value: options.workaroundWebKitBug212780\n        },\n        _workaroundWebKitBug212780Cleanup: {\n          value: null,\n          writable: true\n        }\n      });\n    }\n\n    /**\n     * Update the subscribe {@link Track.Priority} of the {@link RemoteMediaTrack}.\n     * @param {?Track.Priority} priority - the new subscribe {@link Track.Priority};\n     *   If <code>null</code>, then the subscribe {@link Track.Priority} is cleared, which\n     *   means the {@link Track.Priority} set by the publisher is now the effective priority.\n     * @returns {this}\n     * @throws {RangeError}\n     */\n    setPriority(priority) {\n      const priorityValues = [null, ...Object.values(trackPriority)];\n      if (!priorityValues.includes(priority)) {\n        // eslint-disable-next-line new-cap\n        throw E.INVALID_VALUE('priority', priorityValues);\n      }\n      if (this._priority !== priority) {\n        this._priority = priority;\n        this._setPriority(priority);\n      }\n      return this;\n    }\n\n    /**\n     * @private\n     * @param {boolean} isEnabled\n     */\n    _setEnabled(isEnabled) {\n      if (this._isEnabled !== isEnabled) {\n        this._isEnabled = isEnabled;\n        this.emit(this._isEnabled ? 'enabled' : 'disabled', this);\n      }\n    }\n\n    /**\n     * @private\n     * @param {boolean} isSwitchedOff\n     */\n    _setSwitchedOff(isSwitchedOff) {\n      if (this._isSwitchedOff !== isSwitchedOff) {\n        this._isSwitchedOff = isSwitchedOff;\n        this.emit(isSwitchedOff ? 'switchedOff' : 'switchedOn', this);\n      }\n    }\n\n    attach(el) {\n      const result = super.attach(el);\n      if (this.mediaStreamTrack.enabled !== true) {\n        // NOTE(mpatwardhan): we disable mediaStreamTrack when there\n        // are no attachments to it (see notes below). Now that there\n        // are attachments re-enable the track.\n        this.mediaStreamTrack.enabled = true;\n        if (this.processedTrack) {\n          this.processedTrack.enabled = true;\n        }\n\n        // NOTE(csantos): since remote tracks disables/enables the mediaStreamTrack,\n        // captureFrames stops along with it. We need to start it again after re-enabling.\n        // See attach/detach methods in this class and in VideoTrack class.\n        if (this.processor) {\n          this._captureFrames();\n        }\n      }\n      if (this._workaroundWebKitBug212780) {\n        this._workaroundWebKitBug212780Cleanup = this._workaroundWebKitBug212780Cleanup\n          || playIfPausedWhileInBackground(this);\n      }\n\n      return result;\n    }\n\n    detach(el) {\n      const result = super.detach(el);\n      if (this._attachments.size === 0) {\n        // NOTE(mpatwardhan): chrome continues playing webrtc audio\n        // track even after audio element is removed from the DOM.\n        // https://bugs.chromium.org/p/chromium/issues/detail?id=749928\n        // to workaround: here disable the track when\n        // there are no elements attached to it.\n        this.mediaStreamTrack.enabled = false;\n        if (this.processedTrack) {\n          this.processedTrack.enabled = false;\n        }\n\n        if (this._workaroundWebKitBug212780Cleanup) {\n          // unhook visibility change\n          this._workaroundWebKitBug212780Cleanup();\n          this._workaroundWebKitBug212780Cleanup = null;\n        }\n      }\n      return result;\n    }\n  };\n}\n\nfunction playIfPausedWhileInBackground(remoteMediaTrack) {\n  const { _log: log, kind } = remoteMediaTrack;\n\n  function onVisibilityChanged(isVisible) {\n    if (!isVisible) {\n      return;\n    }\n    remoteMediaTrack._attachments.forEach(el => {\n      const shim = remoteMediaTrack._elShims.get(el);\n      const isInadvertentlyPaused = el.paused && shim && !shim.pausedIntentionally();\n      if (isInadvertentlyPaused) {\n        log.info(`Playing inadvertently paused <${kind}> element`);\n        log.debug('Element:', el);\n        log.debug('RemoteMediaTrack:', remoteMediaTrack);\n        el.play().then(() => {\n          log.info(`Successfully played inadvertently paused <${kind}> element`);\n          log.debug('Element:', el);\n          log.debug('RemoteMediaTrack:', remoteMediaTrack);\n        }).catch(err => {\n          log.warn(`Error while playing inadvertently paused <${kind}> element:`, { err, el, remoteMediaTrack });\n        });\n      }\n    });\n  }\n\n  // NOTE(mpatwardhan): listen for document visibility callback on phase 2.\n  // this ensures that any LocalMediaTrack's restart (which listen on phase 1) gets executed\n  // first. This order is important because we `play` tracks in the callback, and\n  // play can fail on safari if audio is not being captured.\n  documentVisibilityMonitor.onVisibilityChange(2, onVisibilityChanged);\n  return () => {\n    documentVisibilityMonitor.offVisibilityChange(2, onVisibilityChanged);\n  };\n}\n\n/**\n * A {@link RemoteMediaTrack} was disabled.\n * @param {RemoteMediaTrack} track - The {@link RemoteMediaTrack} that was\n *   disabled\n * @event RemoteMediaTrack#disabled\n */\n\n/**\n * A {@link RemoteMediaTrack} was enabled.\n * @param {RemoteMediaTrack} track - The {@link RemoteMediaTrack} that was\n *   enabled\n * @event RemoteMediaTrack#enabled\n */\n\n/**\n * A {@link RemoteMediaTrack} was switched off.\n * @param {RemoteMediaTrack} track - The {@link RemoteMediaTrack} that was\n *   switched off\n * @event RemoteMediaTrack#switchedOff\n */\n\n/**\n * A {@link RemoteMediaTrack} was switched on.\n * @param {RemoteMediaTrack} track - The {@link RemoteMediaTrack} that was\n *   switched on\n * @event RemoteMediaTrack#switchedOn\n */\n\n/**\n * A {@link ClientRenderHint} object specifies track dimensions and /enabled disable state.\n * This state will be used by the server(SFU) to determine bandwidth allocation for the track,\n * and turn it on or off as needed.\n * @typedef {object} ClientRenderHint\n * @property {boolean} [enabled] - track is enabled or disabled. defaults to disabled.\n * @property {VideoTrack.Dimensions} [renderDimensions] - Optional parameter to specify the desired\n *   render dimensions of {@link RemoteVideoTrack}s. This property must be specified if enabled=true\n */\n\nmodule.exports = mixinRemoteMediaTrack;\n"]},"metadata":{},"sourceType":"script"}