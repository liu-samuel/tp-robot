{"ast":null,"code":"'use strict';\n/**\n * @property {number} [availableSend] - bps (undefined in Firefox)\n * @property {number} recv - bps\n * @property {number} [rtt] - s (undefined in Firefox)\n * @property {number} send - bps\n */\n\nvar IceReport =\n/** @class */\nfunction () {\n  /**\n   * Construct an {@link IceReport}.\n   * @param {number} send - bps\n   * @param {number} recv - bps\n   * @param {number} [rtt] - s\n   * @param {number} [availableSend] - bps\n   */\n  function IceReport(send, recv, availableSend, rtt) {\n    Object.defineProperties(this, {\n      availableSend: {\n        enumerable: true,\n        value: availableSend\n      },\n      recv: {\n        enumerable: true,\n        value: recv\n      },\n      rtt: {\n        enumerable: true,\n        value: rtt\n      },\n      send: {\n        enumerable: true,\n        value: send\n      }\n    });\n  }\n  /**\n   * @param {RTCStats} olderStats\n   * @param {RTCStats} newerStats\n   * @returns {IceReport}\n   */\n\n\n  IceReport.of = function (olderStats, newerStats) {\n    var secondsElapsed = (newerStats.timestamp - olderStats.timestamp) / 1000;\n    var deltaBytesSent = newerStats.bytesSent - olderStats.bytesSent;\n    var deltaBytesReceived = newerStats.bytesReceived - olderStats.bytesReceived;\n    var send = secondsElapsed > 0 ? deltaBytesSent / secondsElapsed * 8 : 0;\n    var recv = secondsElapsed > 0 ? deltaBytesReceived / secondsElapsed * 8 : 0;\n    var availableSend = newerStats.availableOutgoingBitrate,\n        rtt = newerStats.currentRoundTripTime;\n    return new IceReport(send, recv, availableSend, rtt);\n  };\n\n  return IceReport;\n}();\n\nmodule.exports = IceReport;","map":{"version":3,"mappings":"AAAA;AAEA;;;;;;;AAMA;AAAA;AAAA;EACE;;;;;;;EAOA,mBAAYA,IAAZ,EAAkBC,IAAlB,EAAwBC,aAAxB,EAAuCC,GAAvC,EAA0C;IACxCC,MAAM,CAACC,gBAAP,CAAwB,IAAxB,EAA8B;MAC5BH,aAAa,EAAE;QACbI,UAAU,EAAE,IADC;QAEbC,KAAK,EAAEL;MAFM,CADa;MAK5BD,IAAI,EAAE;QACJK,UAAU,EAAE,IADR;QAEJC,KAAK,EAAEN;MAFH,CALsB;MAS5BE,GAAG,EAAE;QACHG,UAAU,EAAE,IADT;QAEHC,KAAK,EAAEJ;MAFJ,CATuB;MAa5BH,IAAI,EAAE;QACJM,UAAU,EAAE,IADR;QAEJC,KAAK,EAAEP;MAFH;IAbsB,CAA9B;EAkBD;EAED;;;;;;;EAKOQ,eAAP,UAAUC,UAAV,EAAsBC,UAAtB,EAAgC;IAC9B,IAAMC,cAAc,GAAG,CAACD,UAAU,CAACE,SAAX,GAAuBH,UAAU,CAACG,SAAnC,IAAgD,IAAvE;IACA,IAAMC,cAAc,GAAGH,UAAU,CAACI,SAAX,GAAuBL,UAAU,CAACK,SAAzD;IACA,IAAMC,kBAAkB,GAAGL,UAAU,CAACM,aAAX,GAA2BP,UAAU,CAACO,aAAjE;IACA,IAAMhB,IAAI,GAAGW,cAAc,GAAG,CAAjB,GACRE,cAAc,GAAGF,cAAlB,GAAoC,CAD3B,GAET,CAFJ;IAGA,IAAMV,IAAI,GAAGU,cAAc,GAAG,CAAjB,GACRI,kBAAkB,GAAGJ,cAAtB,GAAwC,CAD/B,GAET,CAFJ;IAGQ,IAA0BT,aAAa,GAAgCQ,UAAU,yBAAjF;IAAA,IAA+DP,GAAG,GAAKO,UAAU,qBAAjF;IACR,OAAO,IAAIF,SAAJ,CAAcR,IAAd,EAAoBC,IAApB,EAA0BC,aAA1B,EAAyCC,GAAzC,CAAP;EACD,CAZM;;EAaT;AAAC,CA/CD;;AAiDAc,MAAM,CAACC,OAAP,GAAiBV,SAAjB","names":["send","recv","availableSend","rtt","Object","defineProperties","enumerable","value","IceReport","olderStats","newerStats","secondsElapsed","timestamp","deltaBytesSent","bytesSent","deltaBytesReceived","bytesReceived","module","exports"],"sources":["/home/samliu/repos/ieee/twilio-video-starter-kit/node_modules/twilio-video/lib/stats/icereport.js"],"sourcesContent":["'use strict';\n\n/**\n * @property {number} [availableSend] - bps (undefined in Firefox)\n * @property {number} recv - bps\n * @property {number} [rtt] - s (undefined in Firefox)\n * @property {number} send - bps\n */\nclass IceReport {\n  /**\n   * Construct an {@link IceReport}.\n   * @param {number} send - bps\n   * @param {number} recv - bps\n   * @param {number} [rtt] - s\n   * @param {number} [availableSend] - bps\n   */\n  constructor(send, recv, availableSend, rtt) {\n    Object.defineProperties(this, {\n      availableSend: {\n        enumerable: true,\n        value: availableSend\n      },\n      recv: {\n        enumerable: true,\n        value: recv\n      },\n      rtt: {\n        enumerable: true,\n        value: rtt\n      },\n      send: {\n        enumerable: true,\n        value: send\n      }\n    });\n  }\n\n  /**\n   * @param {RTCStats} olderStats\n   * @param {RTCStats} newerStats\n   * @returns {IceReport}\n   */\n  static of(olderStats, newerStats) {\n    const secondsElapsed = (newerStats.timestamp - olderStats.timestamp) / 1000;\n    const deltaBytesSent = newerStats.bytesSent - olderStats.bytesSent;\n    const deltaBytesReceived = newerStats.bytesReceived - olderStats.bytesReceived;\n    const send = secondsElapsed > 0\n      ? (deltaBytesSent / secondsElapsed) * 8\n      : 0;\n    const recv = secondsElapsed > 0\n      ? (deltaBytesReceived / secondsElapsed) * 8\n      : 0;\n    const { availableOutgoingBitrate: availableSend, currentRoundTripTime: rtt } = newerStats;\n    return new IceReport(send, recv, availableSend, rtt);\n  }\n}\n\nmodule.exports = IceReport;\n"]},"metadata":{},"sourceType":"script"}