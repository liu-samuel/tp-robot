{"ast":null,"code":"'use strict';\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nvar mixinRemoteMediaTrack = require('./remotemediatrack');\n\nvar VideoTrack = require('./videotrack');\n\nvar documentVisibilityMonitor = require('../../util/documentvisibilitymonitor.js');\n\nvar NullObserver = require('../../util/nullobserver.js').NullObserver;\n\nvar Timeout = require('../../util/timeout');\n\nvar RemoteMediaVideoTrack = mixinRemoteMediaTrack(VideoTrack);\nvar TRACK_TURN_OF_DELAY_MS = 50;\n/**\n * A {@link RemoteVideoTrack} represents a {@link VideoTrack} published to a\n * {@link Room} by a {@link RemoteParticipant}.\n * @extends VideoTrack\n * @property {boolean} isEnabled - Whether the {@link RemoteVideoTrack} is enabled\n * @property {boolean} isSwitchedOff - Whether the {@link RemoteVideoTrack} is switched off\n * @property {Track.SID} sid - The {@link RemoteVideoTrack}'s SID\n * @property {?Track.Priority} priority - The subscribe priority of the {@link RemoteVideoTrack}\n * @emits RemoteVideoTrack#dimensionsChanged\n * @emits RemoteVideoTrack#disabled\n * @emits RemoteVideoTrack#enabled\n * @emits RemoteVideoTrack#started\n * @emits RemoteVideoTrack#switchedOff\n * @emits RemoteVideoTrack#switchedOn\n */\n\nvar RemoteVideoTrack =\n/** @class */\nfunction (_super) {\n  __extends(RemoteVideoTrack, _super);\n  /**\n   * Construct a {@link RemoteVideoTrack}.\n   * @param {Track.SID} sid - The {@link RemoteVideoTrack}'s SID\n   * @param {MediaTrackReceiver} mediaTrackReceiver - A video MediaStreamTrack container\n   * @param {boolean} isEnabled - whether the {@link RemoteVideoTrack} is enabled\n   * @param {boolean} isSwitchedOff - Whether the {@link RemoteVideoTrack} is switched off\n   * @param {function(?Track.Priority): void} setPriority - Set or clear the subscribe\n   *  {@link Track.Priority} of the {@link RemoteVideoTrack}\n   * @param {function(ClientRenderHint): void} setRenderHint - Set render hints.\n   * @param {{log: Log}} options - The {@link RemoteTrack} options\n   */\n\n\n  function RemoteVideoTrack(sid, mediaTrackReceiver, isEnabled, isSwitchedOff, setPriority, setRenderHint, options) {\n    var _this = this;\n\n    options = Object.assign({\n      clientTrackSwitchOffControl: 'auto',\n      contentPreferencesMode: 'auto',\n      enableDocumentVisibilityTurnOff: true\n    }, options);\n    options = Object.assign({\n      IntersectionObserver: typeof IntersectionObserver === 'undefined' || options.clientTrackSwitchOffControl !== 'auto' ? NullObserver : IntersectionObserver,\n      ResizeObserver: typeof ResizeObserver === 'undefined' || options.contentPreferencesMode !== 'auto' ? NullObserver : ResizeObserver\n    }, options);\n    _this = _super.call(this, sid, mediaTrackReceiver, isEnabled, isSwitchedOff, setPriority, setRenderHint, options) || this;\n    Object.defineProperties(_this, {\n      _enableDocumentVisibilityTurnOff: {\n        value: options.enableDocumentVisibilityTurnOff === true && options.clientTrackSwitchOffControl === 'auto'\n      },\n      _documentVisibilityTurnOffCleanup: {\n        value: null,\n        writable: true\n      },\n      _clientTrackSwitchOffControl: {\n        value: options.clientTrackSwitchOffControl\n      },\n      _contentPreferencesMode: {\n        value: options.contentPreferencesMode\n      },\n      _invisibleElements: {\n        value: new WeakSet()\n      },\n      _elToPipCallbacks: {\n        value: new WeakMap()\n      },\n      _elToPipWindows: {\n        value: new WeakMap()\n      },\n      _turnOffTimer: {\n        value: new Timeout(function () {\n          _this._setRenderHint({\n            enabled: false\n          });\n        }, TRACK_TURN_OF_DELAY_MS, false)\n      },\n      _resizeObserver: {\n        value: new options.ResizeObserver(function (entries) {\n          // NOTE(mpatwardhan): we ignore elements in _invisibleElements\n          // to ensure that ResizeObserver does not end-up turning off a track when a fresh Video element is\n          // attached and IntersectionObserver has not had its callback executed yet.\n          var visibleElementResized = entries.find(function (entry) {\n            return !_this._invisibleElements.has(entry.target);\n          });\n\n          if (visibleElementResized) {\n            maybeUpdateDimensionHint(_this);\n          }\n        })\n      },\n      _intersectionObserver: {\n        value: new options.IntersectionObserver(function (entries) {\n          var shouldSetRenderHint = false;\n          entries.forEach(function (entry) {\n            var wasVisible = !_this._invisibleElements.has(entry.target);\n\n            if (wasVisible !== entry.isIntersecting) {\n              if (entry.isIntersecting) {\n                _this._log.debug('intersectionObserver detected: Off => On');\n\n                _this._invisibleElements.delete(entry.target);\n              } else {\n                _this._log.debug('intersectionObserver detected: On => Off');\n\n                _this._invisibleElements.add(entry.target);\n              }\n\n              shouldSetRenderHint = true;\n            }\n          });\n\n          if (shouldSetRenderHint) {\n            maybeUpdateEnabledHint(_this); // when visibility of an element changes that may cause the \"biggest\" element to change,\n            // update dimensions as well. since dimensions are cached and de-duped at signaling layer,\n            // its okay if they got  resent.\n\n            maybeUpdateDimensionHint(_this);\n          }\n        }, {\n          threshold: 0.25\n        })\n      }\n    });\n    return _this;\n  }\n  /**\n   * @private\n   */\n\n\n  RemoteVideoTrack.prototype._start = function (dummyEl) {\n    var result = _super.prototype._start.call(this, dummyEl); // NOTE(mpatwardhan): after emitting started, update turn off track if not visible.\n\n\n    maybeUpdateEnabledHint(this);\n    return result;\n  };\n  /**\n   * Request to switch on a {@link RemoteVideoTrack}, This method is applicable only for the group rooms and only when connected with\n   * clientTrackSwitchOffControl in video bandwidth profile options set to 'manual'\n   * @returns {this}\n   */\n\n\n  RemoteVideoTrack.prototype.switchOn = function () {\n    if (this._clientTrackSwitchOffControl !== 'manual') {\n      throw new Error('Invalid state. You can call switchOn only when bandwidthProfile.video.clientTrackSwitchOffControl is set to \"manual\"');\n    }\n\n    this._setRenderHint({\n      enabled: true\n    });\n\n    return this;\n  };\n  /**\n   * Request to switch off a {@link RemoteVideoTrack}, This method is applicable only for the group rooms and only when connected with\n   * clientTrackSwitchOffControl in video bandwidth profile options set to 'manual'\n   * @returns {this}\n   */\n\n\n  RemoteVideoTrack.prototype.switchOff = function () {\n    if (this._clientTrackSwitchOffControl !== 'manual') {\n      throw new Error('Invalid state. You can call switchOff only when bandwidthProfile.video.clientTrackSwitchOffControl is set to \"manual\"');\n    }\n\n    this._setRenderHint({\n      enabled: false\n    });\n\n    return this;\n  };\n  /**\n   * Set the {@link RemoteVideoTrack}'s content preferences. This method is applicable only for the group rooms and only when connected with\n   * videoContentPreferencesMode in video bandwidth profile options set to 'manual'\n   * @param {VideoContentPreferences} contentPreferences - requested preferences.\n   * @returns {this}\n   */\n\n\n  RemoteVideoTrack.prototype.setContentPreferences = function (contentPreferences) {\n    if (this._contentPreferencesMode !== 'manual') {\n      throw new Error('Invalid state. You can call switchOn only when bandwidthProfile.video.contentPreferencesMode is set to \"manual\"');\n    }\n\n    if (contentPreferences.renderDimensions) {\n      this._setRenderHint({\n        renderDimensions: contentPreferences.renderDimensions\n      });\n    }\n\n    return this;\n  };\n\n  RemoteVideoTrack.prototype._unObservePip = function (el) {\n    var pipCallbacks = this._elToPipCallbacks.get(el);\n\n    if (pipCallbacks) {\n      el.removeEventListener('enterpictureinpicture', pipCallbacks.onEnterPip);\n      el.removeEventListener('leavepictureinpicture', pipCallbacks.onLeavePip);\n\n      this._elToPipCallbacks.delete(el);\n    }\n  };\n\n  RemoteVideoTrack.prototype._observePip = function (el) {\n    var _this = this;\n\n    var pipCallbacks = this._elToPipCallbacks.get(el);\n\n    if (!pipCallbacks) {\n      var onEnterPip = function (event) {\n        return _this._onEnterPip(event, el);\n      };\n\n      var onLeavePip = function (event) {\n        return _this._onLeavePip(event, el);\n      };\n\n      var onResizePip = function (event) {\n        return _this._onResizePip(event, el);\n      };\n\n      el.addEventListener('enterpictureinpicture', onEnterPip);\n      el.addEventListener('leavepictureinpicture', onLeavePip);\n\n      this._elToPipCallbacks.set(el, {\n        onEnterPip: onEnterPip,\n        onLeavePip: onLeavePip,\n        onResizePip: onResizePip\n      });\n    }\n  };\n\n  RemoteVideoTrack.prototype._onEnterPip = function (event, videoEl) {\n    this._log.debug('onEnterPip');\n\n    var pipWindow = event.pictureInPictureWindow;\n\n    this._elToPipWindows.set(videoEl, pipWindow);\n\n    var onResizePip = this._elToPipCallbacks.get(videoEl).onResizePip;\n\n    pipWindow.addEventListener('resize', onResizePip);\n    maybeUpdateEnabledHint(this);\n  };\n\n  RemoteVideoTrack.prototype._onLeavePip = function (event, videoEl) {\n    this._log.debug('onLeavePip');\n\n    this._elToPipWindows.delete(videoEl);\n\n    var onResizePip = this._elToPipCallbacks.get(videoEl).onResizePip;\n\n    var pipWindow = event.pictureInPictureWindow;\n    pipWindow.removeEventListener('resize', onResizePip);\n    maybeUpdateEnabledHint(this);\n  };\n\n  RemoteVideoTrack.prototype._onResizePip = function () {\n    maybeUpdateDimensionHint(this);\n  };\n\n  RemoteVideoTrack.prototype.attach = function (el) {\n    var result = _super.prototype.attach.call(this, el);\n\n    if (this._clientTrackSwitchOffControl === 'auto') {\n      // start off the element as invisible. will mark it\n      // visible (and update render hints) once intersection observer calls back.\n      this._invisibleElements.add(result);\n    }\n\n    this._intersectionObserver.observe(result);\n\n    this._resizeObserver.observe(result);\n\n    if (this._enableDocumentVisibilityTurnOff) {\n      this._documentVisibilityTurnOffCleanup = this._documentVisibilityTurnOffCleanup || setupDocumentVisibilityTurnOff(this);\n    }\n\n    this._observePip(result);\n\n    return result;\n  };\n\n  RemoteVideoTrack.prototype.detach = function (el) {\n    var _this = this;\n\n    var result = _super.prototype.detach.call(this, el);\n\n    var elements = Array.isArray(result) ? result : [result];\n    elements.forEach(function (element) {\n      _this._intersectionObserver.unobserve(element);\n\n      _this._resizeObserver.unobserve(element);\n\n      _this._invisibleElements.delete(element);\n\n      _this._unObservePip(element);\n    });\n\n    if (this._attachments.size === 0) {\n      if (this._documentVisibilityTurnOffCleanup) {\n        this._documentVisibilityTurnOffCleanup();\n\n        this._documentVisibilityTurnOffCleanup = null;\n      }\n    }\n\n    maybeUpdateEnabledHint(this);\n    maybeUpdateDimensionHint(this);\n    return result;\n  };\n  /**\n   * Add a {@link VideoProcessor} to allow for custom processing of video frames belonging to a VideoTrack.\n   * When a Participant un-publishes and re-publishes a VideoTrack, a new RemoteVideoTrack is created and\n   * any VideoProcessors attached to the previous RemoteVideoTrack would have to be re-added again.\n   * Only Chrome supports this as of now. Calling this API from a non-supported browser will result in a log warning.\n   * @param {VideoProcessor} processor - The {@link VideoProcessor} to use.\n   * @returns {this}\n   * @example\n   * class GrayScaleProcessor {\n   *   constructor(percentage) {\n   *     this.percentage = percentage;\n   *   }\n   *   processFrame(inputFrameBuffer, outputFrameBuffer) {\n   *     const context = outputFrameBuffer.getContext('2d');\n   *     context.filter = `grayscale(${this.percentage}%)`;\n   *     context.drawImage(inputFrameBuffer, 0, 0, inputFrameBuffer.width, inputFrameBuffer.height);\n   *   }\n   * }\n   *\n   * const grayscaleProcessor = new GrayScaleProcessor(100);\n   *\n   * Array.from(room.participants.values()).forEach(participant => {\n   *   const remoteVideoTrack = Array.from(participant.videoTracks.values())[0].track;\n   *   remoteVideoTrack.addProcessor(grayscaleProcessor);\n   * });\n   */\n\n\n  RemoteVideoTrack.prototype.addProcessor = function () {\n    return _super.prototype.addProcessor.apply(this, arguments);\n  };\n  /**\n   * Remove the previously added {@link VideoProcessor} using `addProcessor` API.\n   * @param {VideoProcessor} processor - The {@link VideoProcessor} to remove.\n   * @returns {this}\n   * @example\n   * class GrayScaleProcessor {\n   *   constructor(percentage) {\n   *     this.percentage = percentage;\n   *   }\n   *   processFrame(inputFrameBuffer, outputFrameBuffer) {\n   *     const context = outputFrameBuffer.getContext('2d');\n   *     context.filter = `grayscale(${this.percentage}%)`;\n   *     context.drawImage(inputFrameBuffer, 0, 0, inputFrameBuffer.width, inputFrameBuffer.height);\n   *   }\n   * }\n   *\n   * const grayscaleProcessor = new GrayScaleProcessor(100);\n   *\n   * Array.from(room.participants.values()).forEach(participant => {\n   *   const remoteVideoTrack = Array.from(participant.videoTracks.values())[0].track;\n   *   remoteVideoTrack.addProcessor(grayscaleProcessor);\n   * });\n   *\n   * document.getElementById('remove-button').onclick = () => {\n   *   Array.from(room.participants.values()).forEach(participant => {\n   *     const remoteVideoTrack = Array.from(participant.videoTracks.values())[0].track;\n   *     remoteVideoTrack.removeProcessor(grayscaleProcessor);\n   *   });\n   * }\n   */\n\n\n  RemoteVideoTrack.prototype.removeProcessor = function () {\n    return _super.prototype.removeProcessor.apply(this, arguments);\n  };\n\n  RemoteVideoTrack.prototype.toString = function () {\n    return \"[RemoteVideoTrack #\" + this._instanceId + \": \" + this.sid + \"]\";\n  };\n  /**\n   * Update the subscribe {@link Track.Priority} of the {@link RemoteVideoTrack}.\n   * @param {?Track.Priority} priority - the new subscribe {@link Track.Priority};\n   *   If <code>null</code>, then the subscribe {@link Track.Priority} is cleared, which\n   *   means the {@link Track.Priority} set by the publisher is now the effective priority.\n   * @returns {this}\n   * @throws {RangeError}\n   */\n\n\n  RemoteVideoTrack.prototype.setPriority = function (priority) {\n    return _super.prototype.setPriority.call(this, priority);\n  };\n\n  return RemoteVideoTrack;\n}(RemoteMediaVideoTrack);\n\nfunction setupDocumentVisibilityTurnOff(removeVideoTrack) {\n  function onVisibilityChanged() {\n    maybeUpdateEnabledHint(removeVideoTrack);\n  }\n\n  documentVisibilityMonitor.onVisibilityChange(1, onVisibilityChanged);\n  return function () {\n    documentVisibilityMonitor.offVisibilityChange(1, onVisibilityChanged);\n  };\n}\n\nfunction maybeUpdateEnabledHint(remoteVideoTrack) {\n  if (remoteVideoTrack._clientTrackSwitchOffControl !== 'auto') {\n    return;\n  }\n\n  var visibleElements = remoteVideoTrack._getAllAttachedElements().filter(function (el) {\n    return !remoteVideoTrack._invisibleElements.has(el);\n  });\n\n  var pipWindows = remoteVideoTrack._getAllAttachedElements().filter(function (el) {\n    return remoteVideoTrack._elToPipWindows.has(el);\n  }); // even when document is invisible we may have track playing in pip window.\n\n\n  var enabled = pipWindows.length > 0 || document.visibilityState === 'visible' && visibleElements.length > 0;\n\n  if (enabled === true) {\n    remoteVideoTrack._turnOffTimer.clear();\n\n    remoteVideoTrack._setRenderHint({\n      enabled: true\n    });\n  } else if (!remoteVideoTrack._turnOffTimer.isSet) {\n    // set the track to be turned off after some delay.\n    remoteVideoTrack._turnOffTimer.start();\n  }\n}\n\nfunction maybeUpdateDimensionHint(remoteVideoTrack) {\n  if (remoteVideoTrack._contentPreferencesMode !== 'auto') {\n    return;\n  }\n\n  var visibleElements = remoteVideoTrack._getAllAttachedElements().filter(function (el) {\n    return !remoteVideoTrack._invisibleElements.has(el);\n  });\n\n  var pipElements = remoteVideoTrack._getAllAttachedElements().map(function (el) {\n    var pipWindow = remoteVideoTrack._elToPipWindows.get(el);\n\n    return pipWindow ? {\n      clientHeight: pipWindow.height,\n      clientWidth: pipWindow.width\n    } : {\n      clientHeight: 0,\n      clientWidth: 0\n    };\n  });\n\n  var totalElements = visibleElements.concat(pipElements);\n\n  if (totalElements.length > 0) {\n    var _a = __read(totalElements.sort(function (el1, el2) {\n      return el2.clientHeight + el2.clientWidth - el1.clientHeight - el1.clientWidth - 1;\n    }), 1),\n        _b = _a[0],\n        clientHeight = _b.clientHeight,\n        clientWidth = _b.clientWidth;\n\n    var renderDimensions = {\n      height: clientHeight,\n      width: clientWidth\n    };\n\n    remoteVideoTrack._setRenderHint({\n      renderDimensions: renderDimensions\n    });\n  }\n}\n/**\n * @typedef {object} VideoContentPreferences\n * @property {VideoTrack.Dimensions} [renderDimensions] - Render Dimensions to request for the {@link RemoteVideoTrack}.\n */\n\n/**\n * The {@link RemoteVideoTrack}'s dimensions changed.\n * @param {RemoteVideoTrack} track - The {@link RemoteVideoTrack} whose\n *   dimensions changed\n * @event RemoteVideoTrack#dimensionsChanged\n */\n\n/**\n * The {@link RemoteVideoTrack} was disabled, i.e. \"paused\".\n * @param {RemoteVideoTrack} track - The {@link RemoteVideoTrack} that was\n *   disabled\n * @event RemoteVideoTrack#disabled\n */\n\n/**\n * The {@link RemoteVideoTrack} was enabled, i.e. \"resumed\".\n * @param {RemoteVideoTrack} track - The {@link RemoteVideoTrack} that was\n *   enabled\n * @event RemoteVideoTrack#enabled\n */\n\n/**\n * The {@link RemoteVideoTrack} started. This means there is enough video data\n * to begin playback.\n * @param {RemoteVideoTrack} track - The {@link RemoteVideoTrack} that started\n * @event RemoteVideoTrack#started\n */\n\n/**\n * A {@link RemoteVideoTrack} was switched off.\n * @param {RemoteVideoTrack} track - The {@link RemoteVideoTrack} that was\n *   switched off\n * @event RemoteVideoTrack#switchedOff\n */\n\n/**\n * A {@link RemoteVideoTrack} was switched on.\n * @param {RemoteVideoTrack} track - The {@link RemoteVideoTrack} that was\n *   switched on\n * @event RemoteVideoTrack#switchedOn\n */\n\n\nmodule.exports = RemoteVideoTrack;","map":{"version":3,"mappings":"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","names":["mixinRemoteMediaTrack","require","VideoTrack","documentVisibilityMonitor","NullObserver","Timeout","RemoteMediaVideoTrack","TRACK_TURN_OF_DELAY_MS","__extends","sid","mediaTrackReceiver","isEnabled","isSwitchedOff","setPriority","setRenderHint","options","Object","assign","clientTrackSwitchOffControl","contentPreferencesMode","enableDocumentVisibilityTurnOff","IntersectionObserver","ResizeObserver","_this","defineProperties","_enableDocumentVisibilityTurnOff","value","_documentVisibilityTurnOffCleanup","writable","_clientTrackSwitchOffControl","_contentPreferencesMode","_invisibleElements","WeakSet","_elToPipCallbacks","WeakMap","_elToPipWindows","_turnOffTimer","_setRenderHint","enabled","_resizeObserver","visibleElementResized","entries","find","has","entry","target","maybeUpdateDimensionHint","_intersectionObserver","shouldSetRenderHint","forEach","wasVisible","isIntersecting","_log","debug","delete","add","maybeUpdateEnabledHint","threshold","RemoteVideoTrack","dummyEl","result","_super","_start","call","Error","contentPreferences","renderDimensions","el","pipCallbacks","get","removeEventListener","onEnterPip","onLeavePip","_onEnterPip","event","_onLeavePip","onResizePip","_onResizePip","addEventListener","set","videoEl","pipWindow","pictureInPictureWindow","attach","observe","setupDocumentVisibilityTurnOff","_observePip","detach","elements","Array","isArray","unobserve","element","_unObservePip","_attachments","size","addProcessor","apply","arguments","removeProcessor","_instanceId","priority","removeVideoTrack","onVisibilityChanged","onVisibilityChange","offVisibilityChange","remoteVideoTrack","visibleElements","_getAllAttachedElements","filter","pipWindows","length","document","visibilityState","clear","isSet","start","pipElements","map","clientHeight","height","clientWidth","width","totalElements","concat","sort","el1","el2","_b","module","exports"],"sources":["/home/samliu/repos/ieee/twilio-video-starter-kit/node_modules/twilio-video/lib/media/track/remotevideotrack.js"],"sourcesContent":["'use strict';\n\nconst mixinRemoteMediaTrack = require('./remotemediatrack');\nconst VideoTrack = require('./videotrack');\nconst documentVisibilityMonitor = require('../../util/documentvisibilitymonitor.js');\nconst { NullObserver } = require('../../util/nullobserver.js');\nconst Timeout = require('../../util/timeout');\n\nconst RemoteMediaVideoTrack = mixinRemoteMediaTrack(VideoTrack);\nconst TRACK_TURN_OF_DELAY_MS = 50;\n\n/**\n * A {@link RemoteVideoTrack} represents a {@link VideoTrack} published to a\n * {@link Room} by a {@link RemoteParticipant}.\n * @extends VideoTrack\n * @property {boolean} isEnabled - Whether the {@link RemoteVideoTrack} is enabled\n * @property {boolean} isSwitchedOff - Whether the {@link RemoteVideoTrack} is switched off\n * @property {Track.SID} sid - The {@link RemoteVideoTrack}'s SID\n * @property {?Track.Priority} priority - The subscribe priority of the {@link RemoteVideoTrack}\n * @emits RemoteVideoTrack#dimensionsChanged\n * @emits RemoteVideoTrack#disabled\n * @emits RemoteVideoTrack#enabled\n * @emits RemoteVideoTrack#started\n * @emits RemoteVideoTrack#switchedOff\n * @emits RemoteVideoTrack#switchedOn\n */\nclass RemoteVideoTrack extends RemoteMediaVideoTrack {\n  /**\n   * Construct a {@link RemoteVideoTrack}.\n   * @param {Track.SID} sid - The {@link RemoteVideoTrack}'s SID\n   * @param {MediaTrackReceiver} mediaTrackReceiver - A video MediaStreamTrack container\n   * @param {boolean} isEnabled - whether the {@link RemoteVideoTrack} is enabled\n   * @param {boolean} isSwitchedOff - Whether the {@link RemoteVideoTrack} is switched off\n   * @param {function(?Track.Priority): void} setPriority - Set or clear the subscribe\n   *  {@link Track.Priority} of the {@link RemoteVideoTrack}\n   * @param {function(ClientRenderHint): void} setRenderHint - Set render hints.\n   * @param {{log: Log}} options - The {@link RemoteTrack} options\n   */\n  constructor(sid, mediaTrackReceiver, isEnabled, isSwitchedOff, setPriority, setRenderHint, options) {\n    options = Object.assign({\n      clientTrackSwitchOffControl: 'auto',\n      contentPreferencesMode: 'auto',\n      enableDocumentVisibilityTurnOff: true,\n    }, options);\n\n    options = Object.assign({\n      IntersectionObserver: typeof IntersectionObserver === 'undefined' || options.clientTrackSwitchOffControl !== 'auto'  ? NullObserver : IntersectionObserver,\n      ResizeObserver: typeof ResizeObserver === 'undefined' || options.contentPreferencesMode !== 'auto' ?  NullObserver : ResizeObserver,\n    }, options);\n\n    super(sid, mediaTrackReceiver, isEnabled, isSwitchedOff, setPriority, setRenderHint, options);\n\n    Object.defineProperties(this, {\n      _enableDocumentVisibilityTurnOff: {\n        value: options.enableDocumentVisibilityTurnOff === true && options.clientTrackSwitchOffControl === 'auto',\n      },\n      _documentVisibilityTurnOffCleanup: {\n        value: null,\n        writable: true\n      },\n      _clientTrackSwitchOffControl: {\n        value: options.clientTrackSwitchOffControl,\n      },\n      _contentPreferencesMode: {\n        value: options.contentPreferencesMode,\n      },\n      _invisibleElements: {\n        value: new WeakSet(),\n      },\n      _elToPipCallbacks: {\n        value: new WeakMap(),\n      },\n      _elToPipWindows: {\n        value: new WeakMap(),\n      },\n      _turnOffTimer: {\n        value: new Timeout(() => {\n          this._setRenderHint({ enabled: false });\n        }, TRACK_TURN_OF_DELAY_MS, false),\n      },\n      _resizeObserver: {\n        value: new options.ResizeObserver(entries => {\n          // NOTE(mpatwardhan): we ignore elements in _invisibleElements\n          // to ensure that ResizeObserver does not end-up turning off a track when a fresh Video element is\n          // attached and IntersectionObserver has not had its callback executed yet.\n          const visibleElementResized = entries.find(entry => !this._invisibleElements.has(entry.target));\n          if (visibleElementResized) {\n            maybeUpdateDimensionHint(this);\n          }\n        })\n      },\n      _intersectionObserver: {\n        value: new options.IntersectionObserver(entries => {\n          let shouldSetRenderHint = false;\n          entries.forEach(entry => {\n            const wasVisible = !this._invisibleElements.has(entry.target);\n            if (wasVisible !== entry.isIntersecting) {\n              if (entry.isIntersecting) {\n                this._log.debug('intersectionObserver detected: Off => On');\n                this._invisibleElements.delete(entry.target);\n              } else {\n                this._log.debug('intersectionObserver detected: On => Off');\n                this._invisibleElements.add(entry.target);\n              }\n              shouldSetRenderHint = true;\n            }\n          });\n          if (shouldSetRenderHint) {\n            maybeUpdateEnabledHint(this);\n\n            // when visibility of an element changes that may cause the \"biggest\" element to change,\n            // update dimensions as well. since dimensions are cached and de-duped at signaling layer,\n            // its okay if they got  resent.\n            maybeUpdateDimensionHint(this);\n          }\n        }, { threshold: 0.25 })\n      },\n    });\n  }\n\n  /**\n   * @private\n   */\n  _start(dummyEl) {\n    const result = super._start.call(this, dummyEl);\n    // NOTE(mpatwardhan): after emitting started, update turn off track if not visible.\n    maybeUpdateEnabledHint(this);\n    return result;\n  }\n\n  /**\n   * Request to switch on a {@link RemoteVideoTrack}, This method is applicable only for the group rooms and only when connected with\n   * clientTrackSwitchOffControl in video bandwidth profile options set to 'manual'\n   * @returns {this}\n   */\n  switchOn() {\n    if (this._clientTrackSwitchOffControl !== 'manual') {\n      throw new Error('Invalid state. You can call switchOn only when bandwidthProfile.video.clientTrackSwitchOffControl is set to \"manual\"');\n    }\n    this._setRenderHint({ enabled: true });\n    return this;\n  }\n\n  /**\n   * Request to switch off a {@link RemoteVideoTrack}, This method is applicable only for the group rooms and only when connected with\n   * clientTrackSwitchOffControl in video bandwidth profile options set to 'manual'\n   * @returns {this}\n   */\n  switchOff() {\n    if (this._clientTrackSwitchOffControl !== 'manual') {\n      throw new Error('Invalid state. You can call switchOff only when bandwidthProfile.video.clientTrackSwitchOffControl is set to \"manual\"');\n    }\n    this._setRenderHint({ enabled: false });\n    return this;\n  }\n\n  /**\n   * Set the {@link RemoteVideoTrack}'s content preferences. This method is applicable only for the group rooms and only when connected with\n   * videoContentPreferencesMode in video bandwidth profile options set to 'manual'\n   * @param {VideoContentPreferences} contentPreferences - requested preferences.\n   * @returns {this}\n   */\n  setContentPreferences(contentPreferences) {\n    if (this._contentPreferencesMode !== 'manual') {\n      throw new Error('Invalid state. You can call switchOn only when bandwidthProfile.video.contentPreferencesMode is set to \"manual\"');\n    }\n\n    if (contentPreferences.renderDimensions) {\n      this._setRenderHint({ renderDimensions: contentPreferences.renderDimensions });\n    }\n    return this;\n  }\n\n  _unObservePip(el) {\n    const pipCallbacks = this._elToPipCallbacks.get(el);\n    if (pipCallbacks) {\n      el.removeEventListener('enterpictureinpicture', pipCallbacks.onEnterPip);\n      el.removeEventListener('leavepictureinpicture', pipCallbacks.onLeavePip);\n      this._elToPipCallbacks.delete(el);\n    }\n  }\n\n  _observePip(el) {\n    const pipCallbacks = this._elToPipCallbacks.get(el);\n    if (!pipCallbacks) {\n      const onEnterPip = event => this._onEnterPip(event, el);\n      const onLeavePip = event => this._onLeavePip(event, el);\n      const onResizePip = event => this._onResizePip(event, el);\n\n      el.addEventListener('enterpictureinpicture', onEnterPip);\n      el.addEventListener('leavepictureinpicture', onLeavePip);\n      this._elToPipCallbacks.set(el, { onEnterPip, onLeavePip, onResizePip });\n    }\n  }\n\n  _onEnterPip(event, videoEl) {\n    this._log.debug('onEnterPip');\n    const pipWindow = event.pictureInPictureWindow;\n    this._elToPipWindows.set(videoEl, pipWindow);\n    const { onResizePip } = this._elToPipCallbacks.get(videoEl);\n    pipWindow.addEventListener('resize', onResizePip);\n    maybeUpdateEnabledHint(this);\n  }\n\n  _onLeavePip(event, videoEl) {\n    this._log.debug('onLeavePip');\n    this._elToPipWindows.delete(videoEl);\n    const { onResizePip } = this._elToPipCallbacks.get(videoEl);\n    const pipWindow = event.pictureInPictureWindow;\n    pipWindow.removeEventListener('resize', onResizePip);\n    maybeUpdateEnabledHint(this);\n  }\n\n  _onResizePip() {\n    maybeUpdateDimensionHint(this);\n  }\n\n  attach(el) {\n    const result = super.attach(el);\n\n    if (this._clientTrackSwitchOffControl === 'auto') {\n      // start off the element as invisible. will mark it\n      // visible (and update render hints) once intersection observer calls back.\n      this._invisibleElements.add(result);\n    }\n\n    this._intersectionObserver.observe(result);\n    this._resizeObserver.observe(result);\n\n    if (this._enableDocumentVisibilityTurnOff) {\n      this._documentVisibilityTurnOffCleanup = this._documentVisibilityTurnOffCleanup || setupDocumentVisibilityTurnOff(this);\n    }\n\n    this._observePip(result);\n    return result;\n  }\n\n  detach(el) {\n    const result = super.detach(el);\n    const elements = Array.isArray(result) ? result : [result];\n    elements.forEach(element => {\n      this._intersectionObserver.unobserve(element);\n      this._resizeObserver.unobserve(element);\n      this._invisibleElements.delete(element);\n      this._unObservePip(element);\n    });\n\n    if (this._attachments.size === 0) {\n      if (this._documentVisibilityTurnOffCleanup) {\n        this._documentVisibilityTurnOffCleanup();\n        this._documentVisibilityTurnOffCleanup = null;\n      }\n    }\n\n    maybeUpdateEnabledHint(this);\n    maybeUpdateDimensionHint(this);\n    return result;\n  }\n\n  /**\n   * Add a {@link VideoProcessor} to allow for custom processing of video frames belonging to a VideoTrack.\n   * When a Participant un-publishes and re-publishes a VideoTrack, a new RemoteVideoTrack is created and\n   * any VideoProcessors attached to the previous RemoteVideoTrack would have to be re-added again.\n   * Only Chrome supports this as of now. Calling this API from a non-supported browser will result in a log warning.\n   * @param {VideoProcessor} processor - The {@link VideoProcessor} to use.\n   * @returns {this}\n   * @example\n   * class GrayScaleProcessor {\n   *   constructor(percentage) {\n   *     this.percentage = percentage;\n   *   }\n   *   processFrame(inputFrameBuffer, outputFrameBuffer) {\n   *     const context = outputFrameBuffer.getContext('2d');\n   *     context.filter = `grayscale(${this.percentage}%)`;\n   *     context.drawImage(inputFrameBuffer, 0, 0, inputFrameBuffer.width, inputFrameBuffer.height);\n   *   }\n   * }\n   *\n   * const grayscaleProcessor = new GrayScaleProcessor(100);\n   *\n   * Array.from(room.participants.values()).forEach(participant => {\n   *   const remoteVideoTrack = Array.from(participant.videoTracks.values())[0].track;\n   *   remoteVideoTrack.addProcessor(grayscaleProcessor);\n   * });\n   */\n  addProcessor() {\n    return super.addProcessor.apply(this, arguments);\n  }\n\n  /**\n   * Remove the previously added {@link VideoProcessor} using `addProcessor` API.\n   * @param {VideoProcessor} processor - The {@link VideoProcessor} to remove.\n   * @returns {this}\n   * @example\n   * class GrayScaleProcessor {\n   *   constructor(percentage) {\n   *     this.percentage = percentage;\n   *   }\n   *   processFrame(inputFrameBuffer, outputFrameBuffer) {\n   *     const context = outputFrameBuffer.getContext('2d');\n   *     context.filter = `grayscale(${this.percentage}%)`;\n   *     context.drawImage(inputFrameBuffer, 0, 0, inputFrameBuffer.width, inputFrameBuffer.height);\n   *   }\n   * }\n   *\n   * const grayscaleProcessor = new GrayScaleProcessor(100);\n   *\n   * Array.from(room.participants.values()).forEach(participant => {\n   *   const remoteVideoTrack = Array.from(participant.videoTracks.values())[0].track;\n   *   remoteVideoTrack.addProcessor(grayscaleProcessor);\n   * });\n   *\n   * document.getElementById('remove-button').onclick = () => {\n   *   Array.from(room.participants.values()).forEach(participant => {\n   *     const remoteVideoTrack = Array.from(participant.videoTracks.values())[0].track;\n   *     remoteVideoTrack.removeProcessor(grayscaleProcessor);\n   *   });\n   * }\n   */\n  removeProcessor() {\n    return super.removeProcessor.apply(this, arguments);\n  }\n\n  toString() {\n    return `[RemoteVideoTrack #${this._instanceId}: ${this.sid}]`;\n  }\n\n  /**\n   * Update the subscribe {@link Track.Priority} of the {@link RemoteVideoTrack}.\n   * @param {?Track.Priority} priority - the new subscribe {@link Track.Priority};\n   *   If <code>null</code>, then the subscribe {@link Track.Priority} is cleared, which\n   *   means the {@link Track.Priority} set by the publisher is now the effective priority.\n   * @returns {this}\n   * @throws {RangeError}\n   */\n  setPriority(priority) {\n    return super.setPriority(priority);\n  }\n}\n\nfunction setupDocumentVisibilityTurnOff(removeVideoTrack) {\n  function onVisibilityChanged() {\n    maybeUpdateEnabledHint(removeVideoTrack);\n  }\n\n  documentVisibilityMonitor.onVisibilityChange(1, onVisibilityChanged);\n  return () => {\n    documentVisibilityMonitor.offVisibilityChange(1, onVisibilityChanged);\n  };\n}\n\nfunction maybeUpdateEnabledHint(remoteVideoTrack) {\n  if (remoteVideoTrack._clientTrackSwitchOffControl !== 'auto') {\n    return;\n  }\n\n  const visibleElements = remoteVideoTrack._getAllAttachedElements().filter(el => !remoteVideoTrack._invisibleElements.has(el));\n  const pipWindows = remoteVideoTrack._getAllAttachedElements().filter(el => remoteVideoTrack._elToPipWindows.has(el));\n\n  // even when document is invisible we may have track playing in pip window.\n  const enabled = pipWindows.length > 0 || (document.visibilityState === 'visible' && visibleElements.length > 0);\n\n  if (enabled === true) {\n    remoteVideoTrack._turnOffTimer.clear();\n    remoteVideoTrack._setRenderHint({ enabled: true });\n  } else if (!remoteVideoTrack._turnOffTimer.isSet) {\n    // set the track to be turned off after some delay.\n    remoteVideoTrack._turnOffTimer.start();\n  }\n}\n\nfunction maybeUpdateDimensionHint(remoteVideoTrack) {\n  if (remoteVideoTrack._contentPreferencesMode !== 'auto') {\n    return;\n  }\n\n  const visibleElements = remoteVideoTrack._getAllAttachedElements().filter(el => !remoteVideoTrack._invisibleElements.has(el));\n  const pipElements = remoteVideoTrack._getAllAttachedElements().map(el => {\n    const pipWindow = remoteVideoTrack._elToPipWindows.get(el);\n    return pipWindow ? { clientHeight: pipWindow.height, clientWidth: pipWindow.width } : { clientHeight: 0, clientWidth: 0 };\n  });\n  const totalElements = visibleElements.concat(pipElements);\n  if (totalElements.length > 0) {\n    const [{ clientHeight, clientWidth }] = totalElements.sort((el1, el2) =>\n      el2.clientHeight + el2.clientWidth - el1.clientHeight - el1.clientWidth - 1);\n    const renderDimensions = { height: clientHeight, width: clientWidth };\n    remoteVideoTrack._setRenderHint({ renderDimensions });\n  }\n}\n\n/**\n * @typedef {object} VideoContentPreferences\n * @property {VideoTrack.Dimensions} [renderDimensions] - Render Dimensions to request for the {@link RemoteVideoTrack}.\n */\n\n/**\n * The {@link RemoteVideoTrack}'s dimensions changed.\n * @param {RemoteVideoTrack} track - The {@link RemoteVideoTrack} whose\n *   dimensions changed\n * @event RemoteVideoTrack#dimensionsChanged\n */\n\n/**\n * The {@link RemoteVideoTrack} was disabled, i.e. \"paused\".\n * @param {RemoteVideoTrack} track - The {@link RemoteVideoTrack} that was\n *   disabled\n * @event RemoteVideoTrack#disabled\n */\n\n/**\n * The {@link RemoteVideoTrack} was enabled, i.e. \"resumed\".\n * @param {RemoteVideoTrack} track - The {@link RemoteVideoTrack} that was\n *   enabled\n * @event RemoteVideoTrack#enabled\n */\n\n/**\n * The {@link RemoteVideoTrack} started. This means there is enough video data\n * to begin playback.\n * @param {RemoteVideoTrack} track - The {@link RemoteVideoTrack} that started\n * @event RemoteVideoTrack#started\n */\n\n/**\n * A {@link RemoteVideoTrack} was switched off.\n * @param {RemoteVideoTrack} track - The {@link RemoteVideoTrack} that was\n *   switched off\n * @event RemoteVideoTrack#switchedOff\n */\n\n/**\n * A {@link RemoteVideoTrack} was switched on.\n * @param {RemoteVideoTrack} track - The {@link RemoteVideoTrack} that was\n *   switched on\n * @event RemoteVideoTrack#switchedOn\n */\n\nmodule.exports = RemoteVideoTrack;\n"]},"metadata":{},"sourceType":"script"}