{"ast":null,"code":"'use strict';\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nvar __spreadArray = this && this.__spreadArray || function (to, from) {\n  for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) to[j] = from[i];\n\n  return to;\n};\n/**\n * A Promise that can be canceled with {@link CancelablePromise#cancel}.\n * @extends Promise\n*/\n\n\nvar CancelablePromise =\n/** @class */\nfunction () {\n  /**\n   * Construct a new {@link CancelablePromise}.\n   * @param {CancelablePromise.OnCreate} onCreate\n   * @param {CancelablePromise.OnCancel} onCancel\n  */\n\n  /**\n  * A function to be called on {@link CancelablePromise} creation\n  * @typedef {function} CancelablePromise.OnCreate\n  * @param {function(*)} resolve\n  * @param {function(*)} reject\n  * @param {function(): boolean} isCanceled\n  */\n\n  /**\n  * A function to be called when {@link CancelablePromise#cancel} is called\n  * @typedef {function} CancelablePromise.OnCancel\n  */\n  function CancelablePromise(onCreate, onCancel) {\n    var _this = this;\n    /* istanbul ignore next */\n\n\n    Object.defineProperties(this, {\n      _isCancelable: {\n        writable: true,\n        value: true\n      },\n      _isCanceled: {\n        writable: true,\n        value: false\n      },\n      _onCancel: {\n        value: onCancel\n      }\n    });\n    Object.defineProperty(this, '_promise', {\n      value: new Promise(function (resolve, reject) {\n        onCreate(function (value) {\n          _this._isCancelable = false;\n          resolve(value);\n        }, function (reason) {\n          _this._isCancelable = false;\n          reject(reason);\n        }, function () {\n          return _this._isCanceled;\n        });\n      })\n    });\n  }\n  /**\n   * Create a synchronously-rejected {@link CancelablePromise}.\n   * @param {*} reason\n   * @returns {Promise<*>}\n   */\n\n\n  CancelablePromise.reject = function (reason) {\n    return new CancelablePromise(function rejected(resolve, reject) {\n      reject(reason);\n    }, function onCancel() {// Do nothing.\n    });\n  };\n  /**\n   * Create a synchronously-resolved {@link CancelablePromise}.\n   * @param {*|Promise<*>|Thenable<*>} result\n   * @returns {CancelablePromise<*>}\n   */\n\n\n  CancelablePromise.resolve = function (result) {\n    return new CancelablePromise(function resolved(resolve) {\n      resolve(result);\n    }, function onCancel() {// Do nothing.\n    });\n  };\n  /**\n   * Attempt to cancel the {@link CancelablePromise}.\n   * @returns {this}\n   */\n\n\n  CancelablePromise.prototype.cancel = function () {\n    if (this._isCancelable) {\n      this._isCanceled = true;\n\n      this._onCancel();\n    }\n\n    return this;\n  };\n  /**\n   * @param {function} onRejected\n   * @returns {CancelablePromise}\n   */\n\n\n  CancelablePromise.prototype.catch = function () {\n    var args = [].slice.call(arguments);\n    var promise = this._promise;\n    return new CancelablePromise(function onCreate(resolve, reject) {\n      promise.catch.apply(promise, __spreadArray([], __read(args))).then(resolve, reject);\n    }, this._onCancel);\n  };\n  /**\n   * @param {?function} onResolved\n   * @param {function} [onRejected]\n   * @returns {CancelablePromise}\n   */\n\n\n  CancelablePromise.prototype.then = function () {\n    var args = [].slice.call(arguments);\n    var promise = this._promise;\n    return new CancelablePromise(function onCreate(resolve, reject) {\n      promise.then.apply(promise, __spreadArray([], __read(args))).then(resolve, reject);\n    }, this._onCancel);\n  };\n  /**\n  * @param {?function} onFinally\n  * @returns {CancelablePromise}\n  */\n\n\n  CancelablePromise.prototype.finally = function () {\n    var args = [].slice.call(arguments);\n    var promise = this._promise;\n    return new CancelablePromise(function onCreate(resolve, reject) {\n      promise.finally.apply(promise, __spreadArray([], __read(args))).then(resolve, reject);\n    }, this._onCancel);\n  };\n\n  return CancelablePromise;\n}();\n\nmodule.exports = CancelablePromise;","map":{"version":3,"mappings":"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","names":["onCreate","onCancel","Object","defineProperties","_isCancelable","writable","value","_isCanceled","_onCancel","defineProperty","Promise","resolve","reject","_this","reason","CancelablePromise","rejected","result","resolved","args","slice","call","arguments","promise","_promise","catch","apply","__spreadArray","then","finally","module","exports"],"sources":["/home/samliu/repos/ieee/twilio-video-starter-kit/node_modules/twilio-video/lib/util/cancelablepromise.js"],"sourcesContent":["'use strict';\n\n/**\n * A Promise that can be canceled with {@link CancelablePromise#cancel}.\n * @extends Promise\n*/\nclass CancelablePromise {\n  /**\n   * Construct a new {@link CancelablePromise}.\n   * @param {CancelablePromise.OnCreate} onCreate\n   * @param {CancelablePromise.OnCancel} onCancel\n  *//**\n   * A function to be called on {@link CancelablePromise} creation\n   * @typedef {function} CancelablePromise.OnCreate\n   * @param {function(*)} resolve\n   * @param {function(*)} reject\n   * @param {function(): boolean} isCanceled\n  *//**\n   * A function to be called when {@link CancelablePromise#cancel} is called\n   * @typedef {function} CancelablePromise.OnCancel\n   */\n  constructor(onCreate, onCancel) {\n    /* istanbul ignore next */\n    Object.defineProperties(this, {\n      _isCancelable: {\n        writable: true,\n        value: true\n      },\n      _isCanceled: {\n        writable: true,\n        value: false\n      },\n      _onCancel: {\n        value: onCancel\n      }\n    });\n\n    Object.defineProperty(this, '_promise', {\n      value: new Promise((resolve, reject) => {\n        onCreate(value => {\n          this._isCancelable = false;\n          resolve(value);\n        }, reason => {\n          this._isCancelable = false;\n          reject(reason);\n        }, () => this._isCanceled);\n      })\n    });\n  }\n\n  /**\n   * Create a synchronously-rejected {@link CancelablePromise}.\n   * @param {*} reason\n   * @returns {Promise<*>}\n   */\n  static reject(reason) {\n    return new CancelablePromise(function rejected(resolve, reject) {\n      reject(reason);\n    }, function onCancel() {\n      // Do nothing.\n    });\n  }\n\n  /**\n   * Create a synchronously-resolved {@link CancelablePromise}.\n   * @param {*|Promise<*>|Thenable<*>} result\n   * @returns {CancelablePromise<*>}\n   */\n  static resolve(result) {\n    return new CancelablePromise(function resolved(resolve) {\n      resolve(result);\n    }, function onCancel() {\n      // Do nothing.\n    });\n  }\n\n  /**\n   * Attempt to cancel the {@link CancelablePromise}.\n   * @returns {this}\n   */\n  cancel() {\n    if (this._isCancelable) {\n      this._isCanceled = true;\n      this._onCancel();\n    }\n    return this;\n  }\n\n  /**\n   * @param {function} onRejected\n   * @returns {CancelablePromise}\n   */\n  catch() {\n    const args = [].slice.call(arguments);\n    const promise = this._promise;\n    return new CancelablePromise(function onCreate(resolve, reject) {\n      promise.catch(...args).then(resolve, reject);\n    }, this._onCancel);\n  }\n\n  /**\n   * @param {?function} onResolved\n   * @param {function} [onRejected]\n   * @returns {CancelablePromise}\n   */\n  then() {\n    const args = [].slice.call(arguments);\n    const promise = this._promise;\n    return new CancelablePromise(function onCreate(resolve, reject) {\n      promise.then(...args).then(resolve, reject);\n    }, this._onCancel);\n  }\n\n  /**\n * @param {?function} onFinally\n * @returns {CancelablePromise}\n */\n  finally() {\n    const args = [].slice.call(arguments);\n    const promise = this._promise;\n    return new CancelablePromise(function onCreate(resolve, reject) {\n      promise.finally(...args).then(resolve, reject);\n    }, this._onCancel);\n  }\n}\n\nmodule.exports = CancelablePromise;\n"]},"metadata":{},"sourceType":"script"}