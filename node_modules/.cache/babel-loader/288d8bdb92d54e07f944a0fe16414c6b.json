{"ast":null,"code":"'use strict';\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar MediaSignaling = require('./mediasignaling');\n\nvar TrackPrioritySignaling =\n/** @class */\nfunction (_super) {\n  __extends(TrackPrioritySignaling, _super);\n  /**\n   * Construct a {@link TrackPrioritySignaling}.\n   * @param {Promise<DataTrackReceiver>} getReceiver\n   */\n\n\n  function TrackPrioritySignaling(getReceiver, options) {\n    var _this = _super.call(this, getReceiver, 'track_priority', options) || this;\n\n    Object.defineProperties(_this, {\n      _enqueuedPriorityUpdates: {\n        value: new Map()\n      }\n    });\n\n    _this.on('ready', function (transport) {\n      Array.from(_this._enqueuedPriorityUpdates.keys()).forEach(function (trackSid) {\n        transport.publish({\n          type: 'track_priority',\n          track: trackSid,\n          subscribe: _this._enqueuedPriorityUpdates.get(trackSid)\n        }); // NOTE(mpatwardhan)- we do not clear _enqueuedPriorityUpdates intentionally,\n        // this cache will is used to re-send the priorities in case of VMS-FailOver.\n      });\n    });\n\n    return _this;\n  }\n  /**\n   * @param {Track.SID} trackSid\n   * @param {'publish'|'subscribe'} publishOrSubscribe\n   * @param {Track.Priority} priority\n   */\n\n\n  TrackPrioritySignaling.prototype.sendTrackPriorityUpdate = function (trackSid, publishOrSubscribe, priority) {\n    if (publishOrSubscribe !== 'subscribe') {\n      throw new Error('only subscribe priorities are supported, found: ' + publishOrSubscribe);\n    }\n\n    this._enqueuedPriorityUpdates.set(trackSid, priority);\n\n    if (this._transport) {\n      this._transport.publish({\n        type: 'track_priority',\n        track: trackSid,\n        subscribe: priority\n      });\n    }\n  };\n\n  return TrackPrioritySignaling;\n}(MediaSignaling);\n\nmodule.exports = TrackPrioritySignaling;","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAMA,cAAc,GAAGC,OAAO,CAAC,kBAAD,CAA9B;;AACA;AAAA;AAAA;EAAqCC;EACnC;;;;;;EAIA,gCAAYC,WAAZ,EAAyBC,OAAzB,EAAgC;IAAhC,YACEC,kBAAMF,WAAN,EAAmB,gBAAnB,EAAqCC,OAArC,KAA6C,IAD/C;;IAGEE,MAAM,CAACC,gBAAP,CAAwBC,KAAxB,EAA8B;MAC5BC,wBAAwB,EAAE;QACxBC,KAAK,EAAE,IAAIC,GAAJ;MADiB;IADE,CAA9B;;IAMAH,KAAI,CAACI,EAAL,CAAQ,OAAR,EAAiB,qBAAS;MACxBC,KAAK,CAACC,IAAN,CAAWN,KAAI,CAACC,wBAAL,CAA8BM,IAA9B,EAAX,EAAiDC,OAAjD,CAAyD,oBAAQ;QAC/DC,SAAS,CAACC,OAAV,CAAkB;UAChBC,IAAI,EAAE,gBADU;UAEhBC,KAAK,EAAEC,QAFS;UAGhBC,SAAS,EAAEd,KAAI,CAACC,wBAAL,CAA8Bc,GAA9B,CAAkCF,QAAlC;QAHK,CAAlB,EAD+D,CAM/D;QACA;MACD,CARD;IASD,CAVD;;;EAWD;EAED;;;;;;;EAKAG,qEAAwBH,QAAxB,EAAkCI,kBAAlC,EAAsDC,QAAtD,EAA8D;IAC5D,IAAID,kBAAkB,KAAK,WAA3B,EAAwC;MACtC,MAAM,IAAIE,KAAJ,CAAU,qDAAqDF,kBAA/D,CAAN;IACD;;IACD,KAAKhB,wBAAL,CAA8BmB,GAA9B,CAAkCP,QAAlC,EAA4CK,QAA5C;;IACA,IAAI,KAAKG,UAAT,EAAqB;MACnB,KAAKA,UAAL,CAAgBX,OAAhB,CAAwB;QACtBC,IAAI,EAAE,gBADgB;QAEtBC,KAAK,EAAEC,QAFe;QAGtBC,SAAS,EAAEI;MAHW,CAAxB;IAKD;EACF,CAZD;;EAaF;AAAC,CA7CD,CAAqC1B,cAArC;;AA+CA8B,MAAM,CAACC,OAAP,GAAiBP,sBAAjB","names":["MediaSignaling","require","__extends","getReceiver","options","_super","Object","defineProperties","_this","_enqueuedPriorityUpdates","value","Map","on","Array","from","keys","forEach","transport","publish","type","track","trackSid","subscribe","get","TrackPrioritySignaling","publishOrSubscribe","priority","Error","set","_transport","module","exports"],"sources":["/home/samliu/repos/ieee/twilio-video-starter-kit/node_modules/twilio-video/lib/signaling/v2/trackprioritysignaling.js"],"sourcesContent":["'use strict';\n\nconst MediaSignaling = require('./mediasignaling');\nclass TrackPrioritySignaling extends MediaSignaling {\n  /**\n   * Construct a {@link TrackPrioritySignaling}.\n   * @param {Promise<DataTrackReceiver>} getReceiver\n   */\n  constructor(getReceiver, options) {\n    super(getReceiver, 'track_priority', options);\n\n    Object.defineProperties(this, {\n      _enqueuedPriorityUpdates: {\n        value: new Map()\n      },\n    });\n\n    this.on('ready', transport => {\n      Array.from(this._enqueuedPriorityUpdates.keys()).forEach(trackSid => {\n        transport.publish({\n          type: 'track_priority',\n          track: trackSid,\n          subscribe: this._enqueuedPriorityUpdates.get(trackSid)\n        });\n        // NOTE(mpatwardhan)- we do not clear _enqueuedPriorityUpdates intentionally,\n        // this cache will is used to re-send the priorities in case of VMS-FailOver.\n      });\n    });\n  }\n\n  /**\n   * @param {Track.SID} trackSid\n   * @param {'publish'|'subscribe'} publishOrSubscribe\n   * @param {Track.Priority} priority\n   */\n  sendTrackPriorityUpdate(trackSid, publishOrSubscribe, priority) {\n    if (publishOrSubscribe !== 'subscribe') {\n      throw new Error('only subscribe priorities are supported, found: ' + publishOrSubscribe);\n    }\n    this._enqueuedPriorityUpdates.set(trackSid, priority);\n    if (this._transport) {\n      this._transport.publish({\n        type: 'track_priority',\n        track: trackSid,\n        subscribe: priority\n      });\n    }\n  }\n}\n\nmodule.exports = TrackPrioritySignaling;\n"]},"metadata":{},"sourceType":"script"}