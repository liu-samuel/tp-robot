{"ast":null,"code":"/* eslint callback-return:0 */\n'use strict';\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {\n      ar.push(r.value);\n    }\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nvar EventEmitter = require('events');\n\nvar PeerConnectionReportFactory = require('../../stats/peerconnectionreportfactory');\n/**\n * @emits NetworkQualityMonitor#updated\n */\n\n\nvar NetworkQualityMonitor =\n/** @class */\nfunction (_super) {\n  __extends(NetworkQualityMonitor, _super);\n  /**\n   * Construct a {@link NetworkQualityMonitor}.\n   * @param {PeerConnectionManager} manager\n   * @param {NetworkQualitySignaling} signaling\n   */\n\n\n  function NetworkQualityMonitor(manager, signaling) {\n    var _this = _super.call(this) || this;\n\n    Object.defineProperties(_this, {\n      _factories: {\n        value: new WeakMap()\n      },\n      _manager: {\n        value: manager\n      },\n      _signaling: {\n        value: signaling\n      }\n    });\n    signaling.on('updated', function () {\n      return _this.emit('updated');\n    });\n    return _this;\n  }\n\n  Object.defineProperty(NetworkQualityMonitor.prototype, \"level\", {\n    /**\n     * Get the current {@link NetworkQualityLevel}, if any.\n     * @returns {?NetworkQualityLevel} level - initially null\n     */\n    get: function get() {\n      return this._signaling.level;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(NetworkQualityMonitor.prototype, \"levels\", {\n    /**\n     * Get the current {@link NetworkQualityLevels}, if any.\n     * @returns {?NetworkQualityLevels} levels - initially null\n     */\n    get: function get() {\n      return this._signaling.levels;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(NetworkQualityMonitor.prototype, \"remoteLevels\", {\n    /**\n     * Get the current {@link NetworkQualityLevels} of remote participants, if any.\n     * @returns {Map<String, NetworkQualityLevels>} remoteLevels\n     */\n    get: function get() {\n      return this._signaling.remoteLevels;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\n   * Start monitoring.\n   * @returns {void}\n   */\n\n  NetworkQualityMonitor.prototype.start = function () {\n    var _this = this;\n\n    this.stop();\n    var timeout = setTimeout(function () {\n      if (_this._timeout !== timeout) {\n        return;\n      }\n\n      next(_this).then(function (reports) {\n        if (_this._timeout !== timeout) {\n          return;\n        }\n\n        if (reports.length) {\n          var _a = __read(reports, 1),\n              report = _a[0];\n\n          _this._signaling.put(report);\n        }\n\n        _this.start();\n      });\n    }, 200);\n    this._timeout = timeout;\n  };\n  /**\n   * Stop monitoring.\n   * @returns {void}\n   */\n\n\n  NetworkQualityMonitor.prototype.stop = function () {\n    clearTimeout(this._timeout);\n    this._timeout = null;\n  };\n\n  return NetworkQualityMonitor;\n}(EventEmitter);\n/**\n * @param {NetworkQualityMonitor}\n * @returns {Promise<NetworkQualityInputs>}\n */\n\n\nfunction next(monitor) {\n  var pcv2s = monitor._manager._peerConnections ? Array.from(monitor._manager._peerConnections.values()) : [];\n  var pcs = pcv2s.map(function (pcv2) {\n    return pcv2._peerConnection;\n  }).filter(function (pc) {\n    return pc.signalingState !== 'closed';\n  });\n  var factories = pcs.map(function (pc) {\n    if (monitor._factories.has(pc)) {\n      return monitor._factories.get(pc);\n    }\n\n    var factory = new PeerConnectionReportFactory(pc);\n\n    monitor._factories.set(pc, factory);\n\n    return factory;\n  });\n  var reportsOrNullPromises = factories.map(function (factory) {\n    return factory.next().catch(function () {\n      return null;\n    });\n  });\n  return Promise.all(reportsOrNullPromises).then(function (reportsOrNull) {\n    return reportsOrNull.filter(function (reportOrNull) {\n      return reportOrNull;\n    }).map(function (report) {\n      return report.summarize();\n    });\n  });\n}\n/**\n * The {@link NetworkQualityLevel} changed.\n * @event NetworkQualityMonitor#updated\n */\n\n\nmodule.exports = NetworkQualityMonitor;","map":{"version":3,"mappings":"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","names":["EventEmitter","require","PeerConnectionReportFactory","__extends","manager","signaling","_super","Object","defineProperties","_this","_factories","value","WeakMap","_manager","_signaling","on","emit","NetworkQualityMonitor","level","levels","remoteLevels","stop","timeout","setTimeout","_timeout","next","then","reports","length","report","put","start","clearTimeout","monitor","pcv2s","_peerConnections","Array","from","values","pcs","map","_peerConnection","filter","signalingState","factories","has","pc","get","factory","set","reportsOrNullPromises","catch","Promise","all","summarize","module","exports"],"sources":["/home/samliu/repos/ieee/twilio-video-starter-kit/node_modules/twilio-video/lib/signaling/v2/networkqualitymonitor.js"],"sourcesContent":["/* eslint callback-return:0 */\n'use strict';\n\nconst EventEmitter = require('events');\n\nconst PeerConnectionReportFactory = require('../../stats/peerconnectionreportfactory');\n\n/**\n * @emits NetworkQualityMonitor#updated\n */\nclass NetworkQualityMonitor extends EventEmitter {\n  /**\n   * Construct a {@link NetworkQualityMonitor}.\n   * @param {PeerConnectionManager} manager\n   * @param {NetworkQualitySignaling} signaling\n   */\n  constructor(manager, signaling) {\n    super();\n    Object.defineProperties(this, {\n      _factories: {\n        value: new WeakMap()\n      },\n      _manager: {\n        value: manager\n      },\n      _signaling: {\n        value: signaling\n      }\n    });\n    signaling.on('updated', () => this.emit('updated'));\n  }\n\n  /**\n   * Get the current {@link NetworkQualityLevel}, if any.\n   * @returns {?NetworkQualityLevel} level - initially null\n   */\n  get level() {\n    return this._signaling.level;\n  }\n\n  /**\n   * Get the current {@link NetworkQualityLevels}, if any.\n   * @returns {?NetworkQualityLevels} levels - initially null\n   */\n  get levels() {\n    return this._signaling.levels;\n  }\n\n  /**\n   * Get the current {@link NetworkQualityLevels} of remote participants, if any.\n   * @returns {Map<String, NetworkQualityLevels>} remoteLevels\n   */\n  get remoteLevels() {\n    return this._signaling.remoteLevels;\n  }\n\n  /**\n   * Start monitoring.\n   * @returns {void}\n   */\n  start() {\n    this.stop();\n    const timeout = setTimeout(() => {\n      if (this._timeout !== timeout) {\n        return;\n      }\n      next(this).then(reports => {\n        if (this._timeout !== timeout) {\n          return;\n        }\n        if (reports.length) {\n          const [report] = reports;\n          this._signaling.put(report);\n        }\n        this.start();\n      });\n    }, 200);\n    this._timeout = timeout;\n  }\n\n  /**\n   * Stop monitoring.\n   * @returns {void}\n   */\n  stop() {\n    clearTimeout(this._timeout);\n    this._timeout = null;\n  }\n}\n\n/**\n * @param {NetworkQualityMonitor}\n * @returns {Promise<NetworkQualityInputs>}\n */\nfunction next(monitor) {\n  const pcv2s = monitor._manager._peerConnections\n    ? Array.from(monitor._manager._peerConnections.values())\n    : [];\n\n  const pcs = pcv2s\n    .map(pcv2 => pcv2._peerConnection)\n    .filter(pc => pc.signalingState !== 'closed');\n\n  const factories = pcs.map(pc => {\n    if (monitor._factories.has(pc)) {\n      return monitor._factories.get(pc);\n    }\n    const factory = new PeerConnectionReportFactory(pc);\n    monitor._factories.set(pc, factory);\n    return factory;\n  });\n\n  const reportsOrNullPromises = factories.map(factory => factory.next().catch(() => null));\n\n  return Promise.all(reportsOrNullPromises).then(reportsOrNull => reportsOrNull\n    .filter(reportOrNull => reportOrNull)\n    .map(report => report.summarize()));\n}\n\n/**\n * The {@link NetworkQualityLevel} changed.\n * @event NetworkQualityMonitor#updated\n */\n\nmodule.exports = NetworkQualityMonitor;\n"]},"metadata":{},"sourceType":"script"}