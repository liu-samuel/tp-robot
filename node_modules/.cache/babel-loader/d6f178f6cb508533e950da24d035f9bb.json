{"ast":null,"code":"'use strict';\n\nvar isNonArrayObject = require('./').isNonArrayObject;\n\nvar _a = require('./constants'),\n    E = _a.typeErrors,\n    clientTrackSwitchOffControl = _a.clientTrackSwitchOffControl,\n    videoContentPreferencesMode = _a.videoContentPreferencesMode,\n    subscriptionMode = _a.subscriptionMode,\n    trackPriority = _a.trackPriority,\n    trackSwitchOffMode = _a.trackSwitchOffMode;\n/**\n * Validate the {@link BandwidthProfileOptions} object.\n * @param {BandwidthProfileOptions} bandwidthProfile\n * @returns {?Error} - null if valid, Error if not.\n */\n\n\nfunction validateBandwidthProfile(bandwidthProfile) {\n  var error = validateObject(bandwidthProfile, 'options.bandwidthProfile');\n\n  if (!bandwidthProfile || error) {\n    return error;\n  }\n\n  error = validateObject(bandwidthProfile.video, 'options.bandwidthProfile.video', [{\n    prop: 'contentPreferencesMode',\n    values: Object.values(videoContentPreferencesMode)\n  }, {\n    prop: 'dominantSpeakerPriority',\n    values: Object.values(trackPriority)\n  }, {\n    prop: 'maxSubscriptionBitrate',\n    type: 'number'\n  }, {\n    prop: 'maxTracks',\n    type: 'number'\n  }, {\n    prop: 'mode',\n    values: Object.values(subscriptionMode)\n  }, {\n    prop: 'clientTrackSwitchOffControl',\n    values: Object.values(clientTrackSwitchOffControl)\n  }, {\n    prop: 'trackSwitchOffMode',\n    values: Object.values(trackSwitchOffMode)\n  }]);\n\n  if (error) {\n    return error;\n  }\n\n  if (bandwidthProfile.video) {\n    // maxTracks is replaced by clientTrackSwitchOffControl.\n    // throw an error if both are specified.\n    if ('maxTracks' in bandwidthProfile.video && 'clientTrackSwitchOffControl' in bandwidthProfile.video) {\n      return new TypeError('options.bandwidthProfile.video.maxTracks is deprecated. Use options.bandwidthProfile.video.clientTrackSwitchOffControl instead.');\n    } // renderDimensions is replaced by contentPreferencesMode.\n    // throw an error if both are specified.\n\n\n    if ('renderDimensions' in bandwidthProfile.video && 'contentPreferencesMode' in bandwidthProfile.video) {\n      return new TypeError('options.bandwidthProfile.video.renderDimensions is deprecated. Use options.bandwidthProfile.video.contentPreferencesMode instead.');\n    }\n\n    return validateRenderDimensions(bandwidthProfile.video.renderDimensions);\n  }\n\n  return null;\n}\n/**\n * Throw if the given track is not a {@link LocalAudioTrack}, a\n * {@link LocalVideoTrack} or a MediaStreamTrack.\n * @param {*} track\n * @param {object} options\n */\n\n\nfunction validateLocalTrack(track, options) {\n  if (!(track instanceof options.LocalAudioTrack || track instanceof options.LocalDataTrack || track instanceof options.LocalVideoTrack || track instanceof options.MediaStreamTrack)) {\n    /* eslint new-cap:0 */\n    throw E.INVALID_TYPE('track', 'LocalAudioTrack, LocalVideoTrack, LocalDataTrack, or MediaStreamTrack');\n  }\n}\n/**\n * Validate an object. An object is valid if it is undefined or a non-null, non-array\n * object whose properties satisfy the specified data-type or value-range requirements.\n * @param {object} object - the object to be validated\n * @param {string} name - the object name to be used to build the error message, if invalid\n * @param {Array<object>} [propChecks] - optional data-type or value-range requirements\n *   for the object's properties\n * @returns {?Error} - null if object is valid, Error if not\n */\n\n\nfunction validateObject(object, name, propChecks) {\n  if (propChecks === void 0) {\n    propChecks = [];\n  } // NOTE(mmalavalli): We determine that an undefined object is valid because this\n  // means the parent object does not contain this object as a property, which is\n  // a valid scenario.\n\n\n  if (typeof object === 'undefined') {\n    return null;\n  } // NOTE(mmalavalli): We determine that if the object is null, or an Array, or\n  // any other non-object type, then it is invalid.\n\n\n  if (object === null || !isNonArrayObject(object)) {\n    return E.INVALID_TYPE(name, 'object');\n  } // NOTE(mmalavalli): We determine that the object is invalid if at least one of\n  // its properties does not satisfy its data-type or value-range requirement.\n\n\n  return propChecks.reduce(function (error, _a) {\n    var prop = _a.prop,\n        type = _a.type,\n        values = _a.values;\n\n    if (error || !(prop in object)) {\n      return error;\n    }\n\n    var value = object[prop];\n\n    if (type && typeof value !== type) {\n      return E.INVALID_TYPE(name + \".\" + prop, type);\n    }\n\n    if (type === 'number' && isNaN(value)) {\n      return E.INVALID_TYPE(name + \".\" + prop, type);\n    }\n\n    if (Array.isArray(values) && !values.includes(value)) {\n      return E.INVALID_VALUE(name + \".\" + prop, values);\n    }\n\n    return error;\n  }, null);\n}\n/**\n * Validates the renderDimensions field to be \"auto\" or {@link VideoRenderDimensions} object.\n * @param {string|VideoRenderDimensions} renderDimensions\n * @returns {?Error} - null if valid, Error if not.\n */\n\n\nfunction validateRenderDimensions(renderDimensions) {\n  var name = 'options.bandwidthProfile.video.renderDimensions';\n  var error = validateObject(renderDimensions, name);\n  return renderDimensions ? error || Object.values(trackPriority).reduce(function (error, prop) {\n    return error || validateObject(renderDimensions[prop], name + \".\" + prop, [{\n      prop: 'height',\n      type: 'number'\n    }, {\n      prop: 'width',\n      type: 'number'\n    }]);\n  }, null) : error;\n}\n\nexports.validateBandwidthProfile = validateBandwidthProfile;\nexports.validateLocalTrack = validateLocalTrack;\nexports.validateObject = validateObject;","map":{"version":3,"mappings":"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","names":["require","isNonArrayObject","E","clientTrackSwitchOffControl","videoContentPreferencesMode","subscriptionMode","trackPriority","trackSwitchOffMode","validateBandwidthProfile","bandwidthProfile","error","validateObject","video","prop","values","Object","type","TypeError","validateRenderDimensions","renderDimensions","validateLocalTrack","track","options","LocalAudioTrack","LocalDataTrack","LocalVideoTrack","MediaStreamTrack","INVALID_TYPE","object","name","propChecks","reduce","_a","value","isNaN","Array","isArray","includes","INVALID_VALUE","exports"],"sources":["/home/samliu/repos/ieee/tp-robot/node_modules/twilio-video/lib/util/validate.js"],"sourcesContent":["'use strict';\n\nconst { isNonArrayObject } = require('./');\nconst { typeErrors: E, clientTrackSwitchOffControl, videoContentPreferencesMode, subscriptionMode, trackPriority, trackSwitchOffMode } = require('./constants');\n\n/**\n * Validate the {@link BandwidthProfileOptions} object.\n * @param {BandwidthProfileOptions} bandwidthProfile\n * @returns {?Error} - null if valid, Error if not.\n */\nfunction validateBandwidthProfile(bandwidthProfile) {\n  let error = validateObject(bandwidthProfile, 'options.bandwidthProfile');\n  if (!bandwidthProfile || error) {\n    return error;\n  }\n  error = validateObject(bandwidthProfile.video, 'options.bandwidthProfile.video', [\n    { prop: 'contentPreferencesMode', values: Object.values(videoContentPreferencesMode) },\n    { prop: 'dominantSpeakerPriority', values: Object.values(trackPriority) },\n    { prop: 'maxSubscriptionBitrate', type: 'number' },\n    { prop: 'maxTracks', type: 'number' },\n    { prop: 'mode', values: Object.values(subscriptionMode) },\n    { prop: 'clientTrackSwitchOffControl', values: Object.values(clientTrackSwitchOffControl) },\n    { prop: 'trackSwitchOffMode', values: Object.values(trackSwitchOffMode) }\n  ]);\n\n  if (error) {\n    return error;\n  }\n\n  if (bandwidthProfile.video) {\n\n    // maxTracks is replaced by clientTrackSwitchOffControl.\n    // throw an error if both are specified.\n    if ('maxTracks' in bandwidthProfile.video && 'clientTrackSwitchOffControl' in bandwidthProfile.video) {\n      return new TypeError('options.bandwidthProfile.video.maxTracks is deprecated. Use options.bandwidthProfile.video.clientTrackSwitchOffControl instead.');\n    }\n\n    // renderDimensions is replaced by contentPreferencesMode.\n    // throw an error if both are specified.\n    if ('renderDimensions' in bandwidthProfile.video && 'contentPreferencesMode' in bandwidthProfile.video) {\n      return new TypeError('options.bandwidthProfile.video.renderDimensions is deprecated. Use options.bandwidthProfile.video.contentPreferencesMode instead.');\n    }\n\n    return validateRenderDimensions(bandwidthProfile.video.renderDimensions);\n  }\n\n  return null;\n}\n\n/**\n * Throw if the given track is not a {@link LocalAudioTrack}, a\n * {@link LocalVideoTrack} or a MediaStreamTrack.\n * @param {*} track\n * @param {object} options\n */\nfunction validateLocalTrack(track, options) {\n  if (!(track instanceof options.LocalAudioTrack\n    || track instanceof options.LocalDataTrack\n    || track instanceof options.LocalVideoTrack\n    || track instanceof options.MediaStreamTrack)) {\n    /* eslint new-cap:0 */\n    throw E.INVALID_TYPE('track', 'LocalAudioTrack, LocalVideoTrack, LocalDataTrack, or MediaStreamTrack');\n  }\n}\n\n/**\n * Validate an object. An object is valid if it is undefined or a non-null, non-array\n * object whose properties satisfy the specified data-type or value-range requirements.\n * @param {object} object - the object to be validated\n * @param {string} name - the object name to be used to build the error message, if invalid\n * @param {Array<object>} [propChecks] - optional data-type or value-range requirements\n *   for the object's properties\n * @returns {?Error} - null if object is valid, Error if not\n */\nfunction validateObject(object, name, propChecks = []) {\n  // NOTE(mmalavalli): We determine that an undefined object is valid because this\n  // means the parent object does not contain this object as a property, which is\n  // a valid scenario.\n  if (typeof object === 'undefined') {\n    return null;\n  }\n  // NOTE(mmalavalli): We determine that if the object is null, or an Array, or\n  // any other non-object type, then it is invalid.\n  if (object === null || !isNonArrayObject(object)) {\n    return E.INVALID_TYPE(name, 'object');\n  }\n  // NOTE(mmalavalli): We determine that the object is invalid if at least one of\n  // its properties does not satisfy its data-type or value-range requirement.\n  return propChecks.reduce((error, { prop, type, values }) => {\n    if (error || !(prop in object)) {\n      return error;\n    }\n    const value = object[prop];\n    if (type && typeof value !== type) {\n      return E.INVALID_TYPE(`${name}.${prop}`, type);\n    }\n    if (type === 'number' && isNaN(value)) {\n      return E.INVALID_TYPE(`${name}.${prop}`, type);\n    }\n    if (Array.isArray(values) && !values.includes(value)) {\n      return E.INVALID_VALUE(`${name}.${prop}`, values);\n    }\n    return error;\n  }, null);\n}\n\n/**\n * Validates the renderDimensions field to be \"auto\" or {@link VideoRenderDimensions} object.\n * @param {string|VideoRenderDimensions} renderDimensions\n * @returns {?Error} - null if valid, Error if not.\n */\nfunction validateRenderDimensions(renderDimensions) {\n  const name = 'options.bandwidthProfile.video.renderDimensions';\n  let error = validateObject(renderDimensions, name);\n  return renderDimensions ? error || Object.values(trackPriority).reduce((error, prop) => {\n    return error || validateObject(renderDimensions[prop], `${name}.${prop}`, [\n      { prop: 'height', type: 'number' },\n      { prop: 'width', type: 'number' }\n    ]);\n  }, null) : error;\n}\n\nexports.validateBandwidthProfile = validateBandwidthProfile;\nexports.validateLocalTrack = validateLocalTrack;\nexports.validateObject = validateObject;\n"]},"metadata":{},"sourceType":"script"}