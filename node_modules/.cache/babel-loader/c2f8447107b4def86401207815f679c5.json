{"ast":null,"code":"'use strict';\n\nvar _a = require('../webrtc/util'),\n    guessBrowser = _a.guessBrowser,\n    isWebRTCSupported = _a.support;\n\nvar _b = require('./browserdetection'),\n    isAndroid = _b.isAndroid,\n    isMobile = _b.isMobile,\n    isNonChromiumEdge = _b.isNonChromiumEdge,\n    rebrandedChromeBrowser = _b.rebrandedChromeBrowser,\n    mobileWebKitBrowser = _b.mobileWebKitBrowser;\n\nvar SUPPORTED_CHROME_BASED_BROWSERS = ['crios', 'edg', 'edge', 'electron', 'headlesschrome'];\nvar SUPPORTED_ANDROID_BROWSERS = ['chrome', 'firefox'];\nvar SUPPORTED_IOS_BROWSERS = ['chrome', 'safari']; // Currently none. Add 'brave', 'edg', and 'edge' here once we start supporting them\n\nvar SUPPORTED_MOBILE_WEBKIT_BASED_BROWSERS = [];\n/**\n * Check if the current browser is officially supported by twilio-video.js.\n * @returns {boolean}\n */\n\nfunction isSupported() {\n  var browser = guessBrowser(); // NOTE (csantos): Return right away if there is no browser detected\n  // to prevent unnecessary checks which could lead to errors\n\n  if (!browser) {\n    return false;\n  }\n\n  var rebrandedChrome = rebrandedChromeBrowser(browser);\n  var mobileWebKit = mobileWebKitBrowser(browser);\n  var supportedMobileBrowsers = isAndroid() ? SUPPORTED_ANDROID_BROWSERS : SUPPORTED_IOS_BROWSERS;\n  return !!browser && isWebRTCSupported() && (!rebrandedChrome || SUPPORTED_CHROME_BASED_BROWSERS.includes(rebrandedChrome)) && !isNonChromiumEdge(browser) && (!mobileWebKit || SUPPORTED_MOBILE_WEBKIT_BASED_BROWSERS.includes(mobileWebKit)) && (!isMobile() || supportedMobileBrowsers.includes(browser));\n}\n\nmodule.exports = isSupported;","map":{"version":3,"mappings":"AAAA;;AAEM,SAA+CA,OAAO,CAAC,gBAAD,CAAtD;AAAA,IAAEC,YAAY,kBAAd;AAAA,IAAyBC,iBAAiB,aAA1C;;AACA,SAA0FF,OAAO,CAAC,oBAAD,CAAjG;AAAA,IAAEG,SAAS,eAAX;AAAA,IAAaC,QAAQ,cAArB;AAAA,IAAuBC,iBAAiB,uBAAxC;AAAA,IAA0CC,sBAAsB,4BAAhE;AAAA,IAAkEC,mBAAmB,yBAArF;;AAEN,IAAMC,+BAA+B,GAAG,CACtC,OADsC,EAEtC,KAFsC,EAGtC,MAHsC,EAItC,UAJsC,EAKtC,gBALsC,CAAxC;AAOA,IAAMC,0BAA0B,GAAG,CACjC,QADiC,EAEjC,SAFiC,CAAnC;AAIA,IAAMC,sBAAsB,GAAG,CAC7B,QAD6B,EAE7B,QAF6B,CAA/B,C,CAIA;;AACA,IAAMC,sCAAsC,GAAG,EAA/C;AAEA;;;;;AAIA,SAASC,WAAT,GAAoB;EAClB,IAAMC,OAAO,GAAGZ,YAAY,EAA5B,CADkB,CAGlB;EACA;;EACA,IAAI,CAACY,OAAL,EAAc;IACZ,OAAO,KAAP;EACD;;EAED,IAAMC,eAAe,GAAGR,sBAAsB,CAACO,OAAD,CAA9C;EACA,IAAME,YAAY,GAAGR,mBAAmB,CAACM,OAAD,CAAxC;EACA,IAAMG,uBAAuB,GAAGb,SAAS,KACvCM,0BADuC,GACVC,sBAD/B;EAGA,OAAO,CAAC,CAACG,OAAF,IACFX,iBAAiB,EADf,KAED,CAACY,eAAD,IAAoBN,+BAA+B,CAACS,QAAhC,CAAyCH,eAAzC,CAFnB,KAGF,CAACT,iBAAiB,CAACQ,OAAD,CAHhB,KAID,CAACE,YAAD,IAAiBJ,sCAAsC,CAACM,QAAvC,CAAgDF,YAAhD,CAJhB,MAKD,CAACX,QAAQ,EAAT,IAAeY,uBAAuB,CAACC,QAAxB,CAAiCJ,OAAjC,CALd,CAAP;AAMD;;AAEDK,MAAM,CAACC,OAAP,GAAiBP,WAAjB","names":["require","guessBrowser","isWebRTCSupported","isAndroid","isMobile","isNonChromiumEdge","rebrandedChromeBrowser","mobileWebKitBrowser","SUPPORTED_CHROME_BASED_BROWSERS","SUPPORTED_ANDROID_BROWSERS","SUPPORTED_IOS_BROWSERS","SUPPORTED_MOBILE_WEBKIT_BASED_BROWSERS","isSupported","browser","rebrandedChrome","mobileWebKit","supportedMobileBrowsers","includes","module","exports"],"sources":["/home/samliu/repos/ieee/tp-robot/node_modules/twilio-video/lib/util/support.js"],"sourcesContent":["'use strict';\n\nconst { guessBrowser, support: isWebRTCSupported } = require('../webrtc/util');\nconst { isAndroid, isMobile, isNonChromiumEdge, rebrandedChromeBrowser, mobileWebKitBrowser } = require('./browserdetection');\n\nconst SUPPORTED_CHROME_BASED_BROWSERS = [\n  'crios',\n  'edg',\n  'edge',\n  'electron',\n  'headlesschrome'\n];\nconst SUPPORTED_ANDROID_BROWSERS = [\n  'chrome',\n  'firefox'\n];\nconst SUPPORTED_IOS_BROWSERS = [\n  'chrome',\n  'safari'\n];\n// Currently none. Add 'brave', 'edg', and 'edge' here once we start supporting them\nconst SUPPORTED_MOBILE_WEBKIT_BASED_BROWSERS = [];\n\n/**\n * Check if the current browser is officially supported by twilio-video.js.\n * @returns {boolean}\n */\nfunction isSupported() {\n  const browser = guessBrowser();\n\n  // NOTE (csantos): Return right away if there is no browser detected\n  // to prevent unnecessary checks which could lead to errors\n  if (!browser) {\n    return false;\n  }\n\n  const rebrandedChrome = rebrandedChromeBrowser(browser);\n  const mobileWebKit = mobileWebKitBrowser(browser);\n  const supportedMobileBrowsers = isAndroid() ?\n    SUPPORTED_ANDROID_BROWSERS : SUPPORTED_IOS_BROWSERS;\n\n  return !!browser\n    && isWebRTCSupported()\n    && (!rebrandedChrome || SUPPORTED_CHROME_BASED_BROWSERS.includes(rebrandedChrome))\n    && !isNonChromiumEdge(browser)\n    && (!mobileWebKit || SUPPORTED_MOBILE_WEBKIT_BASED_BROWSERS.includes(mobileWebKit))\n    && (!isMobile() || supportedMobileBrowsers.includes(browser));\n}\n\nmodule.exports = isSupported;\n"]},"metadata":{},"sourceType":"script"}