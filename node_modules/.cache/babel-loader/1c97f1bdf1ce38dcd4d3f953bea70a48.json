{"ast":null,"code":"/* eslint no-undefined:0 */\n'use strict';\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar average = require('./average');\n\nvar SenderOrReceiverReport = require('./senderorreceiverreport');\n\nvar sum = require('./sum');\n/**\n * @interface SenderSummary\n * @property {number} bitrate\n * @property {number} [rtt] - s (undefined in Chrome)\n */\n\n/**\n * @extends SenderOrReceiverReport\n * @property {number} [rtt] - s (undefined in Chrome)\n */\n\n\nvar SenderReport =\n/** @class */\nfunction (_super) {\n  __extends(SenderReport, _super);\n  /**\n   * Construct a {@link SenderReport}.\n   * @param {StatsId} id\n   * @param {TrackId} trackId\n   * @param {number} bitrate - bps\n   * @param {number} [rtt] - s\n   */\n\n\n  function SenderReport(id, trackId, bitrate, rtt) {\n    var _this = _super.call(this, id, trackId, bitrate) || this;\n\n    Object.defineProperties(_this, {\n      rtt: {\n        enumerable: true,\n        value: rtt\n      }\n    });\n    return _this;\n  }\n  /**\n   * Create a {@link SenderReport}.\n   * @param {string} trackId\n   * @param {RTCStats} olderStats\n   * @param {RTCStats} newerStats\n   * @param {RTCRemoteInboundRtpStreamStats} [newerRemoteStats]\n   * @returns {SenderReport}\n   */\n\n\n  SenderReport.of = function (trackId, olderStats, newerStats, newerRemoteStats) {\n    if (olderStats.id !== newerStats.id) {\n      throw new Error('RTCStats IDs must match');\n    }\n\n    var secondsElapsed = (newerStats.timestamp - olderStats.timestamp) / 1000;\n    var deltaBytesSent = newerStats.bytesSent - olderStats.bytesSent;\n    var bitrate = secondsElapsed > 0 ? deltaBytesSent / secondsElapsed * 8 : 0;\n    var rtt = newerRemoteStats && typeof newerRemoteStats.roundTripTime === 'number' ? newerRemoteStats.roundTripTime / 1000 : undefined;\n    return new SenderReport(olderStats.id, trackId, bitrate, rtt);\n  };\n  /**\n   * Summarize {@link SenderReport}s by summing and averaging their values.\n   * @param {Array<SenderReport>} reports\n   * @returns {SenderSummary}\n   */\n\n\n  SenderReport.summarize = function (reports) {\n    var bitrate = sum(reports.map(function (report) {\n      return report.bitrate;\n    }));\n    var rtt = average(reports.map(function (report) {\n      return report.rtt;\n    }));\n    return {\n      bitrate: bitrate,\n      rtt: rtt\n    };\n  };\n\n  return SenderReport;\n}(SenderOrReceiverReport);\n\nmodule.exports = SenderReport;","map":{"version":3,"mappings":"AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAMA,OAAO,GAAGC,OAAO,CAAC,WAAD,CAAvB;;AACA,IAAMC,sBAAsB,GAAGD,OAAO,CAAC,0BAAD,CAAtC;;AACA,IAAME,GAAG,GAAGF,OAAO,CAAC,OAAD,CAAnB;AAEA;;;;;;AAMA;;;;;;AAIA;AAAA;AAAA;EAA2BG;EACzB;;;;;;;;;EAOA,sBAAYC,EAAZ,EAAgBC,OAAhB,EAAyBC,OAAzB,EAAkCC,GAAlC,EAAqC;IAArC,YACEC,kBAAMJ,EAAN,EAAUC,OAAV,EAAmBC,OAAnB,KAA2B,IAD7B;;IAEEG,MAAM,CAACC,gBAAP,CAAwBC,KAAxB,EAA8B;MAC5BJ,GAAG,EAAE;QACHK,UAAU,EAAE,IADT;QAEHC,KAAK,EAAEN;MAFJ;IADuB,CAA9B;;EAMD;EAED;;;;;;;;;;EAQOO,kBAAP,UAAUT,OAAV,EAAmBU,UAAnB,EAA+BC,UAA/B,EAA2CC,gBAA3C,EAA2D;IACzD,IAAIF,UAAU,CAACX,EAAX,KAAkBY,UAAU,CAACZ,EAAjC,EAAqC;MACnC,MAAM,IAAIc,KAAJ,CAAU,yBAAV,CAAN;IACD;;IACD,IAAMC,cAAc,GAAG,CAACH,UAAU,CAACI,SAAX,GAAuBL,UAAU,CAACK,SAAnC,IAAgD,IAAvE;IACA,IAAMC,cAAc,GAAGL,UAAU,CAACM,SAAX,GAAuBP,UAAU,CAACO,SAAzD;IACA,IAAMhB,OAAO,GAAGa,cAAc,GAAG,CAAjB,GACXE,cAAc,GAAGF,cAAlB,GAAoC,CADxB,GAEZ,CAFJ;IAGA,IAAMZ,GAAG,GAAGU,gBAAgB,IAAI,OAAOA,gBAAgB,CAACM,aAAxB,KAA0C,QAA9D,GACRN,gBAAgB,CAACM,aAAjB,GAAiC,IADzB,GAERC,SAFJ;IAGA,OAAO,IAAIV,YAAJ,CAAiBC,UAAU,CAACX,EAA5B,EAAgCC,OAAhC,EAAyCC,OAAzC,EAAkDC,GAAlD,CAAP;EACD,CAbM;EAeP;;;;;;;EAKOO,yBAAP,UAAiBW,OAAjB,EAAwB;IACtB,IAAMnB,OAAO,GAAGJ,GAAG,CAACuB,OAAO,CAACC,GAAR,CAAY,kBAAM;MAAI,aAAM,CAACpB,OAAP;IAAc,CAApC,CAAD,CAAnB;IACA,IAAMC,GAAG,GAAGR,OAAO,CAAC0B,OAAO,CAACC,GAAR,CAAY,kBAAM;MAAI,aAAM,CAACnB,GAAP;IAAU,CAAhC,CAAD,CAAnB;IACA,OAAO;MACLD,OAAO,SADF;MAELC,GAAG;IAFE,CAAP;EAID,CAPM;;EAQT;AAAC,CAtDD,CAA2BN,sBAA3B;;AAwDA0B,MAAM,CAACC,OAAP,GAAiBd,YAAjB","names":["average","require","SenderOrReceiverReport","sum","__extends","id","trackId","bitrate","rtt","_super","Object","defineProperties","_this","enumerable","value","SenderReport","olderStats","newerStats","newerRemoteStats","Error","secondsElapsed","timestamp","deltaBytesSent","bytesSent","roundTripTime","undefined","reports","map","module","exports"],"sources":["/home/samliu/repos/ieee/twilio-video-starter-kit/node_modules/twilio-video/lib/stats/senderreport.js"],"sourcesContent":["/* eslint no-undefined:0 */\n'use strict';\n\nconst average = require('./average');\nconst SenderOrReceiverReport = require('./senderorreceiverreport');\nconst sum = require('./sum');\n\n/**\n * @interface SenderSummary\n * @property {number} bitrate\n * @property {number} [rtt] - s (undefined in Chrome)\n */\n\n/**\n * @extends SenderOrReceiverReport\n * @property {number} [rtt] - s (undefined in Chrome)\n */\nclass SenderReport extends SenderOrReceiverReport {\n  /**\n   * Construct a {@link SenderReport}.\n   * @param {StatsId} id\n   * @param {TrackId} trackId\n   * @param {number} bitrate - bps\n   * @param {number} [rtt] - s\n   */\n  constructor(id, trackId, bitrate, rtt) {\n    super(id, trackId, bitrate);\n    Object.defineProperties(this, {\n      rtt: {\n        enumerable: true,\n        value: rtt\n      }\n    });\n  }\n\n  /**\n   * Create a {@link SenderReport}.\n   * @param {string} trackId\n   * @param {RTCStats} olderStats\n   * @param {RTCStats} newerStats\n   * @param {RTCRemoteInboundRtpStreamStats} [newerRemoteStats]\n   * @returns {SenderReport}\n   */\n  static of(trackId, olderStats, newerStats, newerRemoteStats) {\n    if (olderStats.id !== newerStats.id) {\n      throw new Error('RTCStats IDs must match');\n    }\n    const secondsElapsed = (newerStats.timestamp - olderStats.timestamp) / 1000;\n    const deltaBytesSent = newerStats.bytesSent - olderStats.bytesSent;\n    const bitrate = secondsElapsed > 0\n      ? (deltaBytesSent / secondsElapsed) * 8\n      : 0;\n    const rtt = newerRemoteStats && typeof newerRemoteStats.roundTripTime === 'number'\n      ? newerRemoteStats.roundTripTime / 1000\n      : undefined;\n    return new SenderReport(olderStats.id, trackId, bitrate, rtt);\n  }\n\n  /**\n   * Summarize {@link SenderReport}s by summing and averaging their values.\n   * @param {Array<SenderReport>} reports\n   * @returns {SenderSummary}\n   */\n  static summarize(reports) {\n    const bitrate = sum(reports.map(report => report.bitrate));\n    const rtt = average(reports.map(report => report.rtt));\n    return {\n      bitrate,\n      rtt\n    };\n  }\n}\n\nmodule.exports = SenderReport;\n"]},"metadata":{},"sourceType":"script"}