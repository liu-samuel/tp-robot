{"ast":null,"code":"/**\n * Expose `Backoff`.\n */\nvar Backoff =\n/** @class */\nfunction () {\n  /**\n   * Construct a {@link Backoff}.\n   * @param {object} options\n   * @property {number} min - Initial timeout in milliseconds [100]\n   * @property {number} max - Max timeout [10000]\n   * @property {boolean} jitter - Apply jitter [0]\n   * @property {number} factor - Multiplication factor for Backoff operation [2]\n   */\n  function Backoff(options) {\n    Object.defineProperties(this, {\n      _min: {\n        value: options.min || 100\n      },\n      _max: {\n        value: options.max || 10000\n      },\n      _jitter: {\n        value: options.jitter > 0 && options.jitter <= 1 ? options.jitter : 0\n      },\n      _factor: {\n        value: options.factor || 2\n      },\n      _attempts: {\n        value: 0,\n        writable: true\n      },\n      _duration: {\n        enumerable: false,\n        get: function () {\n          var ms = this._min * Math.pow(this._factor, this._attempts);\n\n          if (this._jitter) {\n            var rand = Math.random();\n            var deviation = Math.floor(rand * this._jitter * ms);\n            ms = (Math.floor(rand * 10) & 1) === 0 ? ms - deviation : ms + deviation;\n          }\n\n          return Math.min(ms, this._max) | 0;\n        }\n      },\n      _timeoutID: {\n        value: null,\n        writable: true\n      }\n    });\n  }\n  /**\n  * Start the backoff operation.\n  * @param {function} fn - Function to call\n  * @return {void}\n  * @api public\n  */\n\n\n  Backoff.prototype.backoff = function (fn) {\n    var _this = this;\n\n    var duration = this._duration;\n\n    if (this._timeoutID) {\n      clearTimeout(this._timeoutID);\n      this._timeoutID = null;\n    }\n\n    this._timeoutID = setTimeout(function () {\n      _this._attempts++;\n      fn();\n    }, duration);\n  };\n  /**\n  * Reset the number of attempts and clear the timer.\n  *\n  * @return {void}\n  * @api public\n  */\n\n\n  Backoff.prototype.reset = function () {\n    this._attempts = 0;\n\n    if (this._timeoutID) {\n      clearTimeout(this._timeoutID);\n      this._timeoutID = null;\n    }\n  };\n\n  return Backoff;\n}();\n\nmodule.exports = Backoff;","map":{"version":3,"mappings":"AACA;;;AAIA;AAAA;AAAA;EACE;;;;;;;;EAQA,iBAAYA,OAAZ,EAAmB;IACjBC,MAAM,CAACC,gBAAP,CAAwB,IAAxB,EAA8B;MAC5BC,IAAI,EAAE;QACJC,KAAK,EAAEJ,OAAO,CAACK,GAAR,IAAe;MADlB,CADsB;MAI5BC,IAAI,EAAE;QACJF,KAAK,EAAEJ,OAAO,CAACO,GAAR,IAAe;MADlB,CAJsB;MAO5BC,OAAO,EAAE;QACPJ,KAAK,EAAEJ,OAAO,CAACS,MAAR,GAAiB,CAAjB,IAAsBT,OAAO,CAACS,MAAR,IAAkB,CAAxC,GAA4CT,OAAO,CAACS,MAApD,GAA6D;MAD7D,CAPmB;MAU5BC,OAAO,EAAE;QACPN,KAAK,EAAEJ,OAAO,CAACW,MAAR,IAAkB;MADlB,CAVmB;MAa5BC,SAAS,EAAE;QACTR,KAAK,EAAE,CADE;QAETS,QAAQ,EAAE;MAFD,CAbiB;MAiB5BC,SAAS,EAAE;QACTC,UAAU,EAAE,KADH;QAETC,GAAG;UACD,IAAIC,EAAE,GAAG,KAAKd,IAAL,GAAYe,IAAI,CAACC,GAAL,CAAS,KAAKT,OAAd,EAAuB,KAAKE,SAA5B,CAArB;;UACA,IAAI,KAAKJ,OAAT,EAAkB;YAChB,IAAMY,IAAI,GAAIF,IAAI,CAACG,MAAL,EAAd;YACA,IAAMC,SAAS,GAAGJ,IAAI,CAACK,KAAL,CAAWH,IAAI,GAAG,KAAKZ,OAAZ,GAAsBS,EAAjC,CAAlB;YACAA,EAAE,GAAG,CAACC,IAAI,CAACK,KAAL,CAAWH,IAAI,GAAG,EAAlB,IAAwB,CAAzB,MAAgC,CAAhC,GAAqCH,EAAE,GAAGK,SAA1C,GAAsDL,EAAE,GAAGK,SAAhE;UACD;;UACD,OAAOJ,IAAI,CAACb,GAAL,CAASY,EAAT,EAAa,KAAKX,IAAlB,IAA0B,CAAjC;QACD;MAVQ,CAjBiB;MA6B5BkB,UAAU,EAAE;QACVpB,KAAK,EAAE,IADG;QAEVS,QAAQ,EAAE;MAFA;IA7BgB,CAA9B;EAkCD;EAED;;;;;;;;EAMAY,sCAAQC,EAAR,EAAU;IAAV;;IACE,IAAIC,QAAQ,GAAG,KAAKb,SAApB;;IACA,IAAI,KAAKU,UAAT,EAAqB;MACnBI,YAAY,CAAC,KAAKJ,UAAN,CAAZ;MACA,KAAKA,UAAL,GAAkB,IAAlB;IACD;;IACD,KAAKA,UAAL,GAAkBK,UAAU,CAAC;MAC3BC,KAAI,CAAClB,SAAL;MACAc,EAAE;IACH,CAH2B,EAGzBC,QAHyB,CAA5B;EAID,CAVD;EAYA;;;;;;;;EAMAF;IACE,KAAKb,SAAL,GAAiB,CAAjB;;IACA,IAAI,KAAKY,UAAT,EAAqB;MACnBI,YAAY,CAAC,KAAKJ,UAAN,CAAZ;MACA,KAAKA,UAAL,GAAkB,IAAlB;IACD;EACF,CAND;;EAOF;AAAC,CA7ED;;AA+EAO,MAAM,CAACC,OAAP,GAAiBP,OAAjB","names":["options","Object","defineProperties","_min","value","min","_max","max","_jitter","jitter","_factor","factor","_attempts","writable","_duration","enumerable","get","ms","Math","pow","rand","random","deviation","floor","_timeoutID","Backoff","fn","duration","clearTimeout","setTimeout","_this","module","exports"],"sources":["/home/samliu/repos/ieee/tp-robot/node_modules/twilio-video/lib/util/backoff.js"],"sourcesContent":["\n/**\n * Expose `Backoff`.\n */\n\nclass Backoff {\n  /**\n   * Construct a {@link Backoff}.\n   * @param {object} options\n   * @property {number} min - Initial timeout in milliseconds [100]\n   * @property {number} max - Max timeout [10000]\n   * @property {boolean} jitter - Apply jitter [0]\n   * @property {number} factor - Multiplication factor for Backoff operation [2]\n   */\n  constructor(options) {\n    Object.defineProperties(this, {\n      _min: {\n        value: options.min || 100\n      },\n      _max: {\n        value: options.max || 10000\n      },\n      _jitter: {\n        value: options.jitter > 0 && options.jitter <= 1 ? options.jitter : 0\n      },\n      _factor: {\n        value: options.factor || 2\n      },\n      _attempts: {\n        value: 0,\n        writable: true\n      },\n      _duration: {\n        enumerable: false,\n        get() {\n          let ms = this._min * Math.pow(this._factor, this._attempts);\n          if (this._jitter) {\n            const rand =  Math.random();\n            const deviation = Math.floor(rand * this._jitter * ms);\n            ms = (Math.floor(rand * 10) & 1) === 0  ? ms - deviation : ms + deviation;\n          }\n          return Math.min(ms, this._max) | 0;\n        }\n      },\n      _timeoutID: {\n        value: null,\n        writable: true\n      }\n    });\n  }\n\n  /**\n  * Start the backoff operation.\n  * @param {function} fn - Function to call\n  * @return {void}\n  * @api public\n  */\n  backoff(fn) {\n    let duration = this._duration;\n    if (this._timeoutID) {\n      clearTimeout(this._timeoutID);\n      this._timeoutID = null;\n    }\n    this._timeoutID = setTimeout(() => {\n      this._attempts++;\n      fn();\n    }, duration);\n  }\n\n  /**\n  * Reset the number of attempts and clear the timer.\n  *\n  * @return {void}\n  * @api public\n  */\n  reset() {\n    this._attempts = 0;\n    if (this._timeoutID) {\n      clearTimeout(this._timeoutID);\n      this._timeoutID = null;\n    }\n  }\n}\n\nmodule.exports = Backoff;\n"]},"metadata":{},"sourceType":"script"}