{"ast":null,"code":"'use strict';\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar TrackPublication = require('./trackpublication');\n/**\n * A {@link RemoteTrackPublication} represents a {@link RemoteTrack} that has\n * been published to a {@link Room}.\n * @extends TrackPublication\n * @property {boolean} isSubscribed - whether the published {@link RemoteTrack}\n *   is subscribed to\n * @property {boolean} isTrackEnabled - whether the published\n *   {@link RemoteTrack} is enabled\n * @property {Track.Kind} kind - kind of the published {@link RemoteTrack}\n * @property {Track.Priority} publishPriority - the {@link Track.Priority} of the published\n *   {@link RemoteTrack} set by the {@link RemoteParticipant}\n * @property {?RemoteTrack} track - Unless you have subscribed to the\n *   {@link RemoteTrack}, this property is null\n * @emits RemoteTrackPublication#publishPriorityChanged\n * @emits RemoteTrackPublication#subscribed\n * @emits RemoteTrackPublication#subscriptionFailed\n * @emits RemoteTrackPublication#trackDisabled\n * @emits RemoteTrackPublication#trackEnabled\n * @emits RemoteTrackPublication#trackSwitchedOff\n * @emits RemoteTrackPublication#trackSwitchedOn\n * @emits RemoteTrackPublication#unsubscribed\n *\n */\n\n\nvar RemoteTrackPublication =\n/** @class */\nfunction (_super) {\n  __extends(RemoteTrackPublication, _super);\n  /**\n   * Construct a {@link RemoteTrackPublication}.\n   * @param {RemoteTrackPublicationSignaling} signaling - {@link RemoteTrackPublication} signaling\n   * @param {RemoteTrackPublicationOptions} options - {@link RemoteTrackPublication}\n   *   options\n   */\n\n\n  function RemoteTrackPublication(signaling, options) {\n    var _this = _super.call(this, signaling.name, signaling.sid, options) || this;\n\n    Object.defineProperties(_this, {\n      _signaling: {\n        value: signaling\n      },\n      _track: {\n        value: null,\n        writable: true\n      },\n      isSubscribed: {\n        enumerable: true,\n        get: function () {\n          return !!this._track;\n        }\n      },\n      isTrackEnabled: {\n        enumerable: true,\n        get: function () {\n          return signaling.isEnabled;\n        }\n      },\n      kind: {\n        enumerable: true,\n        value: signaling.kind\n      },\n      publishPriority: {\n        enumerable: true,\n        get: function () {\n          return signaling.priority;\n        }\n      },\n      track: {\n        enumerable: true,\n        get: function () {\n          return this._track;\n        }\n      }\n    }); // remember original state, and fire events only on change.\n\n    var error = signaling.error,\n        isEnabled = signaling.isEnabled,\n        isSwitchedOff = signaling.isSwitchedOff,\n        priority = signaling.priority;\n    signaling.on('updated', function () {\n      if (error !== signaling.error) {\n        error = signaling.error;\n\n        _this.emit('subscriptionFailed', signaling.error);\n\n        return;\n      }\n\n      if (isEnabled !== signaling.isEnabled) {\n        isEnabled = signaling.isEnabled;\n\n        if (_this.track) {\n          _this.track._setEnabled(signaling.isEnabled);\n        }\n\n        _this.emit(signaling.isEnabled ? 'trackEnabled' : 'trackDisabled');\n      }\n\n      if (isSwitchedOff !== signaling.isSwitchedOff) {\n        _this._log.debug(_this.trackSid + \": \" + (isSwitchedOff ? 'OFF' : 'ON') + \" => \" + (signaling.isSwitchedOff ? 'OFF' : 'ON'));\n\n        isSwitchedOff = signaling.isSwitchedOff;\n\n        if (_this.track) {\n          _this.track._setSwitchedOff(signaling.isSwitchedOff);\n\n          _this.emit(isSwitchedOff ? 'trackSwitchedOff' : 'trackSwitchedOn', _this.track);\n        } else if (isSwitchedOff) {\n          _this._log.warn('Track was not subscribed when switched Off.');\n        }\n      }\n\n      if (priority !== signaling.priority) {\n        priority = signaling.priority;\n\n        _this.emit('publishPriorityChanged', priority);\n      }\n    });\n    return _this;\n  }\n\n  RemoteTrackPublication.prototype.toString = function () {\n    return \"[RemoteTrackPublication #\" + this._instanceId + \": \" + this.trackSid + \"]\";\n  };\n  /**\n   * @private\n   * @param {RemoteTrack} track\n   */\n\n\n  RemoteTrackPublication.prototype._subscribed = function (track) {\n    if (!this._track && track) {\n      this._track = track;\n      this.emit('subscribed', track);\n    }\n  };\n  /**\n   * @private\n   */\n\n\n  RemoteTrackPublication.prototype._unsubscribe = function () {\n    if (this._track) {\n      var track = this._track;\n      this._track = null;\n      this.emit('unsubscribed', track);\n    }\n  };\n\n  return RemoteTrackPublication;\n}(TrackPublication);\n/**\n * The {@link RemoteTrack}'s publish {@link Track.Priority} was changed by the\n * {@link RemoteParticipant}.\n * @param {Track.Priority} priority - the {@link RemoteTrack}'s new publish\n *   {@link Track.Priority}; RemoteTrackPublication#publishPriority is also\n *   updated accordingly\n * @event RemoteTrackPublication#publishPriorityChanged\n */\n\n/**\n * Your {@link LocalParticipant} subscribed to the {@link RemoteTrack}.\n * @param {RemoteTrack} track - the {@link RemoteTrack} that was subscribed to\n * @event RemoteTrackPublication#subscribed\n */\n\n/**\n * Your {@link LocalParticipant} failed to subscribe to the {@link RemoteTrack}.\n * @param {TwilioError} error - the reason the {@link RemoteTrack} could not be\n *   subscribed to\n * @event RemoteTrackPublication#subscriptionFailed\n */\n\n/**\n * The {@link RemoteTrack} was disabled.\n * @event RemoteTrackPublication#trackDisabled\n */\n\n/**\n * The {@link RemoteTrack} was enabled.\n * @event RemoteTrackPublication#trackEnabled\n */\n\n/**\n * The {@link RemoteTrack} was switched off.\n * @param {RemoteTrack} track - the {@link RemoteTrack} that was switched off\n * @event RemoteTrackPublication#trackSwitchedOff\n */\n\n/**\n * The {@link RemoteTrack} was switched on.\n * @param {RemoteTrack} track - the {@link RemoteTrack} that was switched on\n * @event RemoteTrackPublication#trackSwitchedOn\n */\n\n/**\n * Your {@link LocalParticipant} unsubscribed from the {@link RemoteTrack}.\n * @param {RemoteTrack} track - the {@link RemoteTrack} that was unsubscribed from\n * @event RemoteTrackPublication#unsubscribed\n */\n\n/**\n * {@link RemoteTrackPublication} options\n * @typedef {object} RemoteTrackPublicationOptions\n * @property {LogLevel|LogLevels} logLevel - Log level for 'media' modules\n */\n\n\nmodule.exports = RemoteTrackPublication;","map":{"version":3,"mappings":"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","names":["TrackPublication","require","__extends","signaling","options","_super","name","sid","Object","defineProperties","_this","_signaling","value","_track","writable","isSubscribed","enumerable","get","isTrackEnabled","isEnabled","kind","publishPriority","priority","track","isSwitchedOff","on","error","emit","_setEnabled","_log","debug","trackSid","_setSwitchedOff","warn","RemoteTrackPublication","_instanceId","module","exports"],"sources":["/home/samliu/repos/ieee/tp-robot/node_modules/twilio-video/lib/media/track/remotetrackpublication.js"],"sourcesContent":["'use strict';\n\nconst TrackPublication = require('./trackpublication');\n\n/**\n * A {@link RemoteTrackPublication} represents a {@link RemoteTrack} that has\n * been published to a {@link Room}.\n * @extends TrackPublication\n * @property {boolean} isSubscribed - whether the published {@link RemoteTrack}\n *   is subscribed to\n * @property {boolean} isTrackEnabled - whether the published\n *   {@link RemoteTrack} is enabled\n * @property {Track.Kind} kind - kind of the published {@link RemoteTrack}\n * @property {Track.Priority} publishPriority - the {@link Track.Priority} of the published\n *   {@link RemoteTrack} set by the {@link RemoteParticipant}\n * @property {?RemoteTrack} track - Unless you have subscribed to the\n *   {@link RemoteTrack}, this property is null\n * @emits RemoteTrackPublication#publishPriorityChanged\n * @emits RemoteTrackPublication#subscribed\n * @emits RemoteTrackPublication#subscriptionFailed\n * @emits RemoteTrackPublication#trackDisabled\n * @emits RemoteTrackPublication#trackEnabled\n * @emits RemoteTrackPublication#trackSwitchedOff\n * @emits RemoteTrackPublication#trackSwitchedOn\n * @emits RemoteTrackPublication#unsubscribed\n *\n */\nclass RemoteTrackPublication extends TrackPublication {\n  /**\n   * Construct a {@link RemoteTrackPublication}.\n   * @param {RemoteTrackPublicationSignaling} signaling - {@link RemoteTrackPublication} signaling\n   * @param {RemoteTrackPublicationOptions} options - {@link RemoteTrackPublication}\n   *   options\n   */\n  constructor(signaling, options) {\n    super(signaling.name, signaling.sid, options);\n\n    Object.defineProperties(this, {\n      _signaling: {\n        value: signaling\n      },\n      _track: {\n        value: null,\n        writable: true\n      },\n      isSubscribed: {\n        enumerable: true,\n        get() {\n          return !!this._track;\n        }\n      },\n      isTrackEnabled: {\n        enumerable: true,\n        get() {\n          return signaling.isEnabled;\n        }\n      },\n      kind: {\n        enumerable: true,\n        value: signaling.kind\n      },\n      publishPriority: {\n        enumerable: true,\n        get() {\n          return signaling.priority;\n        }\n      },\n      track: {\n        enumerable: true,\n        get() {\n          return this._track;\n        }\n      }\n    });\n\n    // remember original state, and fire events only on change.\n    let {\n      error,\n      isEnabled,\n      isSwitchedOff,\n      priority\n    } = signaling;\n\n    signaling.on('updated', () => {\n      if (error !== signaling.error) {\n        error = signaling.error;\n        this.emit('subscriptionFailed', signaling.error);\n        return;\n      }\n      if (isEnabled !== signaling.isEnabled) {\n        isEnabled = signaling.isEnabled;\n        if (this.track) {\n          this.track._setEnabled(signaling.isEnabled);\n        }\n        this.emit(signaling.isEnabled ? 'trackEnabled' : 'trackDisabled');\n      }\n      if (isSwitchedOff !== signaling.isSwitchedOff) {\n        this._log.debug(`${this.trackSid}: ${isSwitchedOff ? 'OFF' : 'ON'} => ${signaling.isSwitchedOff ? 'OFF' : 'ON'}`);\n        isSwitchedOff = signaling.isSwitchedOff;\n        if (this.track) {\n          this.track._setSwitchedOff(signaling.isSwitchedOff);\n          this.emit(isSwitchedOff ? 'trackSwitchedOff' : 'trackSwitchedOn',  this.track);\n        } else if (isSwitchedOff) {\n          this._log.warn('Track was not subscribed when switched Off.');\n        }\n      }\n      if (priority !== signaling.priority) {\n        priority = signaling.priority;\n        this.emit('publishPriorityChanged', priority);\n      }\n    });\n  }\n\n  toString() {\n    return `[RemoteTrackPublication #${this._instanceId}: ${this.trackSid}]`;\n  }\n\n  /**\n   * @private\n   * @param {RemoteTrack} track\n   */\n  _subscribed(track) {\n    if (!this._track && track) {\n      this._track = track;\n      this.emit('subscribed', track);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _unsubscribe() {\n    if (this._track) {\n      const track = this._track;\n      this._track = null;\n      this.emit('unsubscribed', track);\n    }\n  }\n}\n\n/**\n * The {@link RemoteTrack}'s publish {@link Track.Priority} was changed by the\n * {@link RemoteParticipant}.\n * @param {Track.Priority} priority - the {@link RemoteTrack}'s new publish\n *   {@link Track.Priority}; RemoteTrackPublication#publishPriority is also\n *   updated accordingly\n * @event RemoteTrackPublication#publishPriorityChanged\n */\n\n/**\n * Your {@link LocalParticipant} subscribed to the {@link RemoteTrack}.\n * @param {RemoteTrack} track - the {@link RemoteTrack} that was subscribed to\n * @event RemoteTrackPublication#subscribed\n */\n\n/**\n * Your {@link LocalParticipant} failed to subscribe to the {@link RemoteTrack}.\n * @param {TwilioError} error - the reason the {@link RemoteTrack} could not be\n *   subscribed to\n * @event RemoteTrackPublication#subscriptionFailed\n */\n\n/**\n * The {@link RemoteTrack} was disabled.\n * @event RemoteTrackPublication#trackDisabled\n */\n\n/**\n * The {@link RemoteTrack} was enabled.\n * @event RemoteTrackPublication#trackEnabled\n */\n\n/**\n * The {@link RemoteTrack} was switched off.\n * @param {RemoteTrack} track - the {@link RemoteTrack} that was switched off\n * @event RemoteTrackPublication#trackSwitchedOff\n */\n\n/**\n * The {@link RemoteTrack} was switched on.\n * @param {RemoteTrack} track - the {@link RemoteTrack} that was switched on\n * @event RemoteTrackPublication#trackSwitchedOn\n */\n\n/**\n * Your {@link LocalParticipant} unsubscribed from the {@link RemoteTrack}.\n * @param {RemoteTrack} track - the {@link RemoteTrack} that was unsubscribed from\n * @event RemoteTrackPublication#unsubscribed\n */\n\n/**\n * {@link RemoteTrackPublication} options\n * @typedef {object} RemoteTrackPublicationOptions\n * @property {LogLevel|LogLevels} logLevel - Log level for 'media' modules\n */\n\nmodule.exports = RemoteTrackPublication;\n"]},"metadata":{},"sourceType":"script"}