{"ast":null,"code":"'use strict';\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar EventEmitter = require('events').EventEmitter;\n/**\n * @classdesc A {@link DataTransport} implements {@link MediaSignalingTransport}\n *   in terms of an RTCDataChannel.\n * @extends EventEmitter\n * @implements MediaSignalingTransport\n * @emits DataTransport#message\n */\n\n\nvar DataTransport =\n/** @class */\nfunction (_super) {\n  __extends(DataTransport, _super);\n  /**\n   * Construct a {@link DataTransport}.\n   * @param {RTCDataChannel} dataChannel\n   */\n\n\n  function DataTransport(dataChannel) {\n    var _this = _super.call(this) || this;\n\n    Object.defineProperties(_this, {\n      _dataChannel: {\n        value: dataChannel\n      },\n      _messageQueue: {\n        value: []\n      }\n    });\n    dataChannel.addEventListener('open', function () {\n      _this._messageQueue.splice(0).forEach(function (message) {\n        return _this._publish(message);\n      });\n    });\n    dataChannel.addEventListener('message', function (_a) {\n      var data = _a.data;\n\n      try {\n        var message = JSON.parse(data);\n\n        _this.emit('message', message);\n      } catch (error) {// Do nothing.\n      }\n    });\n\n    _this.publish({\n      type: 'ready'\n    });\n\n    return _this;\n  }\n  /**\n   * @param message\n   * @private\n   */\n\n\n  DataTransport.prototype._publish = function (message) {\n    var data = JSON.stringify(message);\n\n    try {\n      this._dataChannel.send(data);\n    } catch (error) {// Do nothing.\n    }\n  };\n  /**\n   * Publish a message. Returns true if calling the method resulted in\n   * publishing (or eventually publishing) the update.\n   * @param {object} message\n   * @returns {boolean}\n   */\n\n\n  DataTransport.prototype.publish = function (message) {\n    var dataChannel = this._dataChannel;\n\n    if (dataChannel.readyState === 'closing' || dataChannel.readyState === 'closed') {\n      return false;\n    }\n\n    if (dataChannel.readyState === 'connecting') {\n      this._messageQueue.push(message);\n\n      return true;\n    }\n\n    this._publish(message);\n\n    return true;\n  };\n\n  return DataTransport;\n}(EventEmitter);\n/**\n * The {@link DataTransport} received a message.\n * @event DataTransport#message\n * @param {object} message\n */\n\n\nmodule.exports = DataTransport;","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEQ,gBAAY,GAAKA,OAAO,CAAC,QAAD,CAAP,CAAiBC,YAAlC;AAER;;;;;;;;;AAOA;AAAA;AAAA;EAA4BC;EAC1B;;;;;;EAIA,uBAAYC,WAAZ,EAAuB;IAAvB,YACEC,qBAAO,IADT;;IAGEC,MAAM,CAACC,gBAAP,CAAwBC,KAAxB,EAA8B;MAC5BC,YAAY,EAAE;QACZC,KAAK,EAAEN;MADK,CADc;MAI5BO,aAAa,EAAE;QACbD,KAAK,EAAE;MADM;IAJa,CAA9B;IASAN,WAAW,CAACQ,gBAAZ,CAA6B,MAA7B,EAAqC;MACnCJ,KAAI,CAACG,aAAL,CAAmBE,MAAnB,CAA0B,CAA1B,EAA6BC,OAA7B,CAAqC,mBAAO;QAAI,YAAI,CAACC,QAAL,CAAcC,OAAd;MAAsB,CAAtE;IACD,CAFD;IAIAZ,WAAW,CAACQ,gBAAZ,CAA6B,SAA7B,EAAwC,UAACK,EAAD,EAAS;UAANC,IAAI;;MAC7C,IAAI;QACF,IAAMF,OAAO,GAAGG,IAAI,CAACC,KAAL,CAAWF,IAAX,CAAhB;;QACAV,KAAI,CAACa,IAAL,CAAU,SAAV,EAAqBL,OAArB;MACD,CAHD,CAGE,OAAOM,KAAP,EAAc,CACd;MACD;IACF,CAPD;;IASAd,KAAI,CAACe,OAAL,CAAa;MAAEC,IAAI,EAAE;IAAR,CAAb;;;EACD;EAED;;;;;;EAIAC,6CAAST,OAAT,EAAgB;IACd,IAAME,IAAI,GAAGC,IAAI,CAACO,SAAL,CAAeV,OAAf,CAAb;;IACA,IAAI;MACF,KAAKP,YAAL,CAAkBkB,IAAlB,CAAuBT,IAAvB;IACD,CAFD,CAEE,OAAOI,KAAP,EAAc,CACd;IACD;EACF,CAPD;EASA;;;;;;;;EAMAG,4CAAQT,OAAR,EAAe;IACb,IAAMZ,WAAW,GAAG,KAAKK,YAAzB;;IACA,IAAIL,WAAW,CAACwB,UAAZ,KAA2B,SAA3B,IAAwCxB,WAAW,CAACwB,UAAZ,KAA2B,QAAvE,EAAiF;MAC/E,OAAO,KAAP;IACD;;IACD,IAAIxB,WAAW,CAACwB,UAAZ,KAA2B,YAA/B,EAA6C;MAC3C,KAAKjB,aAAL,CAAmBkB,IAAnB,CAAwBb,OAAxB;;MACA,OAAO,IAAP;IACD;;IACD,KAAKD,QAAL,CAAcC,OAAd;;IACA,OAAO,IAAP;EACD,CAXD;;EAYF;AAAC,CAhED,CAA4Bd,YAA5B;AAkEA;;;;;;;AAMA4B,MAAM,CAACC,OAAP,GAAiBN,aAAjB","names":["require","EventEmitter","__extends","dataChannel","_super","Object","defineProperties","_this","_dataChannel","value","_messageQueue","addEventListener","splice","forEach","_publish","message","_a","data","JSON","parse","emit","error","publish","type","DataTransport","stringify","send","readyState","push","module","exports"],"sources":["/home/samliu/repos/ieee/twilio-video-starter-kit/node_modules/twilio-video/lib/data/transport.js"],"sourcesContent":["'use strict';\n\nconst { EventEmitter } = require('events');\n\n/**\n * @classdesc A {@link DataTransport} implements {@link MediaSignalingTransport}\n *   in terms of an RTCDataChannel.\n * @extends EventEmitter\n * @implements MediaSignalingTransport\n * @emits DataTransport#message\n */\nclass DataTransport extends EventEmitter {\n  /**\n   * Construct a {@link DataTransport}.\n   * @param {RTCDataChannel} dataChannel\n   */\n  constructor(dataChannel) {\n    super();\n\n    Object.defineProperties(this, {\n      _dataChannel: {\n        value: dataChannel\n      },\n      _messageQueue: {\n        value: []\n      }\n    });\n\n    dataChannel.addEventListener('open', () => {\n      this._messageQueue.splice(0).forEach(message => this._publish(message));\n    });\n\n    dataChannel.addEventListener('message', ({ data }) => {\n      try {\n        const message = JSON.parse(data);\n        this.emit('message', message);\n      } catch (error) {\n        // Do nothing.\n      }\n    });\n\n    this.publish({ type: 'ready' });\n  }\n\n  /**\n   * @param message\n   * @private\n   */\n  _publish(message) {\n    const data = JSON.stringify(message);\n    try {\n      this._dataChannel.send(data);\n    } catch (error) {\n      // Do nothing.\n    }\n  }\n\n  /**\n   * Publish a message. Returns true if calling the method resulted in\n   * publishing (or eventually publishing) the update.\n   * @param {object} message\n   * @returns {boolean}\n   */\n  publish(message) {\n    const dataChannel = this._dataChannel;\n    if (dataChannel.readyState === 'closing' || dataChannel.readyState === 'closed') {\n      return false;\n    }\n    if (dataChannel.readyState === 'connecting') {\n      this._messageQueue.push(message);\n      return true;\n    }\n    this._publish(message);\n    return true;\n  }\n}\n\n/**\n * The {@link DataTransport} received a message.\n * @event DataTransport#message\n * @param {object} message\n */\n\nmodule.exports = DataTransport;\n"]},"metadata":{},"sourceType":"script"}