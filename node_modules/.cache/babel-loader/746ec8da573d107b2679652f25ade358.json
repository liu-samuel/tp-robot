{"ast":null,"code":"'use strict';\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar TrackSignaling = require('./track');\n/**\n * A {@link LocalTrackPublication} implementation\n * @extends TrackSignaling\n * @property {Track.ID} id\n */\n\n\nvar LocalTrackPublicationSignaling =\n/** @class */\nfunction (_super) {\n  __extends(LocalTrackPublicationSignaling, _super);\n  /**\n   * Construct a {@link LocalTrackPublicationSignaling}. {@link TrackSenders}\n   * are always cloned.\n   * @param {DataTrackSender|MediaTrackSender} trackSender - the {@link TrackSender}\n   *   of the {@link LocalTrack} to be published\n   * @param {string} name - the name of the {@link LocalTrack} to be published\n   * @param {Track.Priority} priority - initial {@link Track.Priority}\n   */\n\n\n  function LocalTrackPublicationSignaling(trackSender, name, priority) {\n    var _this = this;\n\n    trackSender = trackSender.clone();\n    var enabled = trackSender.kind === 'data' ? true : trackSender.track.enabled;\n    _this = _super.call(this, name, trackSender.kind, enabled, priority) || this;\n\n    _this.setTrackTransceiver(trackSender);\n\n    Object.defineProperties(_this, {\n      _updatedPriority: {\n        value: priority,\n        writable: true\n      },\n      id: {\n        enumerable: true,\n        value: trackSender.id\n      }\n    });\n    return _this;\n  }\n\n  Object.defineProperty(LocalTrackPublicationSignaling.prototype, \"updatedPriority\", {\n    /**\n     * The updated {@link Track.Priority} of the {@link LocalTrack}.\n     * @property {Track.priority}\n     */\n    get: function () {\n      return this._updatedPriority;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\n   * Enable (or disable) the {@link LocalTrackPublicationSignaling} if it is not\n   * already enabled (or disabled). This also updates the cloned\n   * {@link MediaTrackSender}'s MediaStreamTracks `enabled` state.\n   * @param {boolean} [enabled=true]\n   * @return {this}\n   */\n\n  LocalTrackPublicationSignaling.prototype.enable = function (enabled) {\n    enabled = typeof enabled === 'boolean' ? enabled : true;\n    this.trackTransceiver.track.enabled = enabled;\n    return _super.prototype.enable.call(this, enabled);\n  };\n  /**\n   * Rejects the SID's deferred promise with the given Error.\n   * @param {Error} error\n   * @returns {this}\n   */\n\n\n  LocalTrackPublicationSignaling.prototype.publishFailed = function (error) {\n    if (setError(this, error)) {\n      this.emit('updated');\n    }\n\n    return this;\n  };\n  /**\n   * Update the {@link Track.Priority} of the published {@link LocalTrack}.\n   * @param {Track.priority} priority\n   * @returns {this}\n   */\n\n\n  LocalTrackPublicationSignaling.prototype.setPriority = function (priority) {\n    if (this._updatedPriority !== priority) {\n      this._updatedPriority = priority;\n      this.emit('updated');\n    }\n\n    return this;\n  };\n  /**\n   * Set the published {@link LocalTrack}'s {@link Track.SID}.\n   * @param {Track.SID} sid\n   * @returns {this}\n   */\n\n\n  LocalTrackPublicationSignaling.prototype.setSid = function (sid) {\n    if (this._error) {\n      return this;\n    }\n\n    return _super.prototype.setSid.call(this, sid);\n  };\n  /**\n   * Stop the cloned {@link TrackSender}.\n   * @returns {void}\n   */\n\n\n  LocalTrackPublicationSignaling.prototype.stop = function () {\n    this.trackTransceiver.stop();\n  };\n\n  return LocalTrackPublicationSignaling;\n}(TrackSignaling);\n/**\n * @param {LocalTrackPublication} publication\n * @param {Error} error\n * @returns {boolean} updated\n */\n\n\nfunction setError(publication, error) {\n  if (publication._sid !== null || publication._error) {\n    return false;\n  }\n\n  publication._error = error;\n  return true;\n}\n\nmodule.exports = LocalTrackPublicationSignaling;","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAMA,cAAc,GAAGC,OAAO,CAAC,SAAD,CAA9B;AAEA;;;;;;;AAKA;AAAA;AAAA;EAA6CC;EAC3C;;;;;;;;;;EAQA,wCAAYC,WAAZ,EAAyBC,IAAzB,EAA+BC,QAA/B,EAAuC;IAAvC;;IACEF,WAAW,GAAGA,WAAW,CAACG,KAAZ,EAAd;IACA,IAAMC,OAAO,GAAGJ,WAAW,CAACK,IAAZ,KAAqB,MAArB,GAA8B,IAA9B,GAAqCL,WAAW,CAACM,KAAZ,CAAkBF,OAAvE;IACAG,0BAAMN,IAAN,EAAYD,WAAW,CAACK,IAAxB,EAA8BD,OAA9B,EAAuCF,QAAvC,KAAgD,IAAhD;;IACAK,KAAI,CAACC,mBAAL,CAAyBR,WAAzB;;IACAS,MAAM,CAACC,gBAAP,CAAwBH,KAAxB,EAA8B;MAC5BI,gBAAgB,EAAE;QAChBC,KAAK,EAAEV,QADS;QAEhBW,QAAQ,EAAE;MAFM,CADU;MAK5BC,EAAE,EAAE;QACFC,UAAU,EAAE,IADV;QAEFH,KAAK,EAAEZ,WAAW,CAACc;MAFjB;IALwB,CAA9B;;EAUD;;EAMDL,sBAAIO,wCAAJ,EAAI,iBAAJ,EAAmB;IAJnB;;;;SAIA;MACE,OAAO,KAAKL,gBAAZ;IACD,CAFkB;qBAAA;;EAAA,CAAnB;EAIA;;;;;;;;EAOAK,4DAAOZ,OAAP,EAAc;IACZA,OAAO,GAAG,OAAOA,OAAP,KAAmB,SAAnB,GAA+BA,OAA/B,GAAyC,IAAnD;IACA,KAAKa,gBAAL,CAAsBX,KAAtB,CAA4BF,OAA5B,GAAsCA,OAAtC;IACA,OAAOc,iBAAMC,MAAN,CAAYC,IAAZ,CAAY,IAAZ,EAAahB,OAAb,CAAP;EACD,CAJD;EAMA;;;;;;;EAKAY,mEAAcK,KAAd,EAAmB;IACjB,IAAIC,QAAQ,CAAC,IAAD,EAAOD,KAAP,CAAZ,EAA2B;MACzB,KAAKE,IAAL,CAAU,SAAV;IACD;;IACD,OAAO,IAAP;EACD,CALD;EAOA;;;;;;;EAKAP,iEAAYd,QAAZ,EAAoB;IAClB,IAAI,KAAKS,gBAAL,KAA0BT,QAA9B,EAAwC;MACtC,KAAKS,gBAAL,GAAwBT,QAAxB;MACA,KAAKqB,IAAL,CAAU,SAAV;IACD;;IACD,OAAO,IAAP;EACD,CAND;EAQA;;;;;;;EAKAP,4DAAOQ,GAAP,EAAU;IACR,IAAI,KAAKC,MAAT,EAAiB;MACf,OAAO,IAAP;IACD;;IACD,OAAOP,iBAAMQ,MAAN,CAAaN,IAAb,CAAkB,IAAlB,EAAwBI,GAAxB,CAAP;EACD,CALD;EAOA;;;;;;EAIAR;IACE,KAAKC,gBAAL,CAAsBU,IAAtB;EACD,CAFD;;EAGF;AAAC,CA3FD,CAA6C9B,cAA7C;AA6FA;;;;;;;AAKA,SAASyB,QAAT,CAAkBM,WAAlB,EAA+BP,KAA/B,EAAoC;EAClC,IAAIO,WAAW,CAACC,IAAZ,KAAqB,IAArB,IAA6BD,WAAW,CAACH,MAA7C,EAAqD;IACnD,OAAO,KAAP;EACD;;EACDG,WAAW,CAACH,MAAZ,GAAqBJ,KAArB;EACA,OAAO,IAAP;AACD;;AAEDS,MAAM,CAACC,OAAP,GAAiBf,8BAAjB","names":["TrackSignaling","require","__extends","trackSender","name","priority","clone","enabled","kind","track","_this","setTrackTransceiver","Object","defineProperties","_updatedPriority","value","writable","id","enumerable","LocalTrackPublicationSignaling","trackTransceiver","_super","enable","call","error","setError","emit","sid","_error","setSid","stop","publication","_sid","module","exports"],"sources":["/home/samliu/repos/ieee/twilio-video-starter-kit/node_modules/twilio-video/lib/signaling/localtrackpublication.js"],"sourcesContent":["'use strict';\n\nconst TrackSignaling = require('./track');\n\n/**\n * A {@link LocalTrackPublication} implementation\n * @extends TrackSignaling\n * @property {Track.ID} id\n */\nclass LocalTrackPublicationSignaling extends TrackSignaling {\n  /**\n   * Construct a {@link LocalTrackPublicationSignaling}. {@link TrackSenders}\n   * are always cloned.\n   * @param {DataTrackSender|MediaTrackSender} trackSender - the {@link TrackSender}\n   *   of the {@link LocalTrack} to be published\n   * @param {string} name - the name of the {@link LocalTrack} to be published\n   * @param {Track.Priority} priority - initial {@link Track.Priority}\n   */\n  constructor(trackSender, name, priority) {\n    trackSender = trackSender.clone();\n    const enabled = trackSender.kind === 'data' ? true : trackSender.track.enabled;\n    super(name, trackSender.kind, enabled, priority);\n    this.setTrackTransceiver(trackSender);\n    Object.defineProperties(this, {\n      _updatedPriority: {\n        value: priority,\n        writable: true\n      },\n      id: {\n        enumerable: true,\n        value: trackSender.id\n      }\n    });\n  }\n\n  /**\n   * The updated {@link Track.Priority} of the {@link LocalTrack}.\n   * @property {Track.priority}\n   */\n  get updatedPriority() {\n    return this._updatedPriority;\n  }\n\n  /**\n   * Enable (or disable) the {@link LocalTrackPublicationSignaling} if it is not\n   * already enabled (or disabled). This also updates the cloned\n   * {@link MediaTrackSender}'s MediaStreamTracks `enabled` state.\n   * @param {boolean} [enabled=true]\n   * @return {this}\n   */\n  enable(enabled) {\n    enabled = typeof enabled === 'boolean' ? enabled : true;\n    this.trackTransceiver.track.enabled = enabled;\n    return super.enable(enabled);\n  }\n\n  /**\n   * Rejects the SID's deferred promise with the given Error.\n   * @param {Error} error\n   * @returns {this}\n   */\n  publishFailed(error) {\n    if (setError(this, error)) {\n      this.emit('updated');\n    }\n    return this;\n  }\n\n  /**\n   * Update the {@link Track.Priority} of the published {@link LocalTrack}.\n   * @param {Track.priority} priority\n   * @returns {this}\n   */\n  setPriority(priority) {\n    if (this._updatedPriority !== priority) {\n      this._updatedPriority = priority;\n      this.emit('updated');\n    }\n    return this;\n  }\n\n  /**\n   * Set the published {@link LocalTrack}'s {@link Track.SID}.\n   * @param {Track.SID} sid\n   * @returns {this}\n   */\n  setSid(sid) {\n    if (this._error) {\n      return this;\n    }\n    return super.setSid.call(this, sid);\n  }\n\n  /**\n   * Stop the cloned {@link TrackSender}.\n   * @returns {void}\n   */\n  stop() {\n    this.trackTransceiver.stop();\n  }\n}\n\n/**\n * @param {LocalTrackPublication} publication\n * @param {Error} error\n * @returns {boolean} updated\n */\nfunction setError(publication, error) {\n  if (publication._sid !== null || publication._error) {\n    return false;\n  }\n  publication._error = error;\n  return true;\n}\n\nmodule.exports = LocalTrackPublicationSignaling;\n"]},"metadata":{},"sourceType":"script"}