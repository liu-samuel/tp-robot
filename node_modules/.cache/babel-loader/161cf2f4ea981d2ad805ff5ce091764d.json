{"ast":null,"code":"/* eslint new-cap:0 */\n'use strict';\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {\n      ar.push(r.value);\n    }\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nvar __spreadArray = this && this.__spreadArray || function (to, from) {\n  for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) {\n    to[j] = from[i];\n  }\n\n  return to;\n};\n\nvar TrackPublication = require('./trackpublication');\n\nvar _a = require('../../util/constants'),\n    E = _a.typeErrors,\n    trackPriority = _a.trackPriority;\n/**\n * A {@link LocalTrackPublication} is a {@link LocalTrack} that has been\n * published to a {@link Room}.\n * @extends TrackPublication\n * @property {boolean} isTrackEnabled - whether the published {@link LocalTrack}\n *   is enabled\n * @property {Track.Kind} kind - kind of the published {@link LocalTrack}\n * @property {Track.Priority} priority - the publish priority of the {@link LocalTrack}\n * @property {LocalTrack} track - the {@link LocalTrack}\n * @emits LocalTrackPublication#warning\n * @emits LocalTrackPublication#warningsCleared\n */\n\n\nvar LocalTrackPublication =\n/** @class */\nfunction (_super) {\n  __extends(LocalTrackPublication, _super);\n  /**\n   * Construct a {@link LocalTrackPublication}.\n   * @param {LocalTrackPublicationSignaling} signaling - The corresponding\n   *   {@link LocalTrackPublicationSignaling}\n   * @param {LocalTrack} track - The {@link LocalTrack}\n   * @param {function(LocalTrackPublication): void} unpublish - The callback\n   *   that unpublishes the {@link LocalTrackPublication}\n   * @param {TrackPublicationOptions} options - {@link LocalTrackPublication}\n   *   options\n   */\n\n\n  function LocalTrackPublication(signaling, track, unpublish, options) {\n    var _this = _super.call(this, track.name, signaling.sid, options) || this;\n\n    Object.defineProperties(_this, {\n      _reemitSignalingEvent: {\n        value: function value() {\n          var args = [];\n\n          for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n          }\n\n          return _this.emit.apply(_this, __spreadArray([args && args.length ? 'warning' : 'warningsCleared'], __read(args)));\n        }\n      },\n      _reemitTrackEvent: {\n        value: function value() {\n          return _this.emit(_this.isTrackEnabled ? 'trackEnabled' : 'trackDisabled');\n        }\n      },\n      _signaling: {\n        value: signaling\n      },\n      _unpublish: {\n        value: unpublish\n      },\n      isTrackEnabled: {\n        enumerable: true,\n        get: function get() {\n          return this.track.kind === 'data' ? true : this.track.isEnabled;\n        }\n      },\n      kind: {\n        enumerable: true,\n        value: track.kind\n      },\n      priority: {\n        enumerable: true,\n        get: function get() {\n          return signaling.updatedPriority;\n        }\n      },\n      track: {\n        enumerable: true,\n        value: track\n      }\n    });\n    ['disabled', 'enabled'].forEach(function (name) {\n      return track.on(name, _this._reemitTrackEvent);\n    });\n    ['warning', 'warningsCleared'].forEach(function (name) {\n      return signaling.on(name, _this._reemitSignalingEvent);\n    });\n    return _this;\n  }\n\n  LocalTrackPublication.prototype.toString = function () {\n    return \"[LocalTrackPublication #\" + this._instanceId + \": \" + this.trackSid + \"]\";\n  };\n  /**\n   * Update the {@link Track.Priority} of the published {@link LocalTrack}.\n   * @param {Track.Priority} priority - the new {@link Track.priority}\n   * @returns {this}\n   * @throws {RangeError}\n   */\n\n\n  LocalTrackPublication.prototype.setPriority = function (priority) {\n    var priorityValues = Object.values(trackPriority);\n\n    if (!priorityValues.includes(priority)) {\n      throw E.INVALID_VALUE('priority', priorityValues);\n    }\n\n    this._signaling.setPriority(priority);\n\n    return this;\n  };\n  /**\n   * Unpublish a {@link LocalTrackPublication}. This means that the media\n   * from this {@link LocalTrackPublication} is no longer available to the\n   * {@link Room}'s {@link RemoteParticipant}s.\n   * @returns {this}\n   */\n\n\n  LocalTrackPublication.prototype.unpublish = function () {\n    var _this = this;\n\n    ['disabled', 'enabled'].forEach(function (name) {\n      return _this.track.removeListener(name, _this._reemitTrackEvent);\n    });\n    ['warning', 'warningsCleared'].forEach(function (name) {\n      return _this._signaling.removeListener(name, _this._reemitSignalingEvent);\n    });\n\n    this._unpublish(this);\n\n    return this;\n  };\n\n  return LocalTrackPublication;\n}(TrackPublication);\n/**\n * The published {@link LocalTrack} encountered a warning.\n * This event is only raised if you enabled warnings using <code>notifyWarnings</code> in <code>ConnectOptions</code>.\n * @event LocalTrackPublication#warning\n * @param {string} name - The warning that was raised.\n */\n\n/**\n * The published {@link LocalTrack} cleared all warnings.\n * This event is only raised if you enabled warnings using <code>notifyWarnings</code> in <code>ConnectOptions</code>.\n * @event LocalTrackPublication#warningsCleared\n */\n\n\nmodule.exports = LocalTrackPublication;","map":{"version":3,"mappings":"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","names":["TrackPublication","require","E","trackPriority","__extends","signaling","track","unpublish","options","_super","name","sid","Object","defineProperties","_this","_reemitSignalingEvent","value","args","emit","apply","__spreadArray","length","__read","_reemitTrackEvent","isTrackEnabled","_signaling","_unpublish","enumerable","get","kind","isEnabled","priority","updatedPriority","forEach","on","LocalTrackPublication","_instanceId","trackSid","priorityValues","values","includes","INVALID_VALUE","setPriority","removeListener","module","exports"],"sources":["/home/samliu/repos/ieee/twilio-video-starter-kit/node_modules/twilio-video/lib/media/track/localtrackpublication.js"],"sourcesContent":["/* eslint new-cap:0 */\n'use strict';\n\nconst TrackPublication = require('./trackpublication');\nconst { typeErrors: E, trackPriority } = require('../../util/constants');\n\n/**\n * A {@link LocalTrackPublication} is a {@link LocalTrack} that has been\n * published to a {@link Room}.\n * @extends TrackPublication\n * @property {boolean} isTrackEnabled - whether the published {@link LocalTrack}\n *   is enabled\n * @property {Track.Kind} kind - kind of the published {@link LocalTrack}\n * @property {Track.Priority} priority - the publish priority of the {@link LocalTrack}\n * @property {LocalTrack} track - the {@link LocalTrack}\n * @emits LocalTrackPublication#warning\n * @emits LocalTrackPublication#warningsCleared\n */\nclass LocalTrackPublication extends TrackPublication {\n  /**\n   * Construct a {@link LocalTrackPublication}.\n   * @param {LocalTrackPublicationSignaling} signaling - The corresponding\n   *   {@link LocalTrackPublicationSignaling}\n   * @param {LocalTrack} track - The {@link LocalTrack}\n   * @param {function(LocalTrackPublication): void} unpublish - The callback\n   *   that unpublishes the {@link LocalTrackPublication}\n   * @param {TrackPublicationOptions} options - {@link LocalTrackPublication}\n   *   options\n   */\n  constructor(signaling, track, unpublish, options) {\n    super(track.name, signaling.sid, options);\n\n    Object.defineProperties(this, {\n      _reemitSignalingEvent: {\n        value: (...args) => this.emit(\n          args && args.length ? 'warning' : 'warningsCleared',\n          ...args\n        )\n      },\n      _reemitTrackEvent: {\n        value: () => this.emit(this.isTrackEnabled\n          ? 'trackEnabled'\n          : 'trackDisabled')\n      },\n      _signaling: {\n        value: signaling\n      },\n      _unpublish: {\n        value: unpublish\n      },\n      isTrackEnabled: {\n        enumerable: true,\n        get() {\n          return this.track.kind === 'data' ? true : this.track.isEnabled;\n        }\n      },\n      kind: {\n        enumerable: true,\n        value: track.kind\n      },\n      priority: {\n        enumerable: true,\n        get() {\n          return signaling.updatedPriority;\n        }\n      },\n      track: {\n        enumerable: true,\n        value: track\n      }\n    });\n\n    ['disabled', 'enabled'].forEach(name =>\n      track.on(name, this._reemitTrackEvent));\n\n    ['warning', 'warningsCleared'].forEach(name =>\n      signaling.on(name, this._reemitSignalingEvent));\n  }\n\n  toString() {\n    return `[LocalTrackPublication #${this._instanceId}: ${this.trackSid}]`;\n  }\n\n  /**\n   * Update the {@link Track.Priority} of the published {@link LocalTrack}.\n   * @param {Track.Priority} priority - the new {@link Track.priority}\n   * @returns {this}\n   * @throws {RangeError}\n   */\n  setPriority(priority) {\n    const priorityValues = Object.values(trackPriority);\n    if (!priorityValues.includes(priority)) {\n      throw E.INVALID_VALUE('priority', priorityValues);\n    }\n    this._signaling.setPriority(priority);\n    return this;\n  }\n\n  /**\n   * Unpublish a {@link LocalTrackPublication}. This means that the media\n   * from this {@link LocalTrackPublication} is no longer available to the\n   * {@link Room}'s {@link RemoteParticipant}s.\n   * @returns {this}\n   */\n  unpublish() {\n    ['disabled', 'enabled'].forEach(name =>\n      this.track.removeListener(name, this._reemitTrackEvent));\n\n    ['warning', 'warningsCleared'].forEach(name =>\n      this._signaling.removeListener(name, this._reemitSignalingEvent));\n\n    this._unpublish(this);\n    return this;\n  }\n}\n\n/**\n * The published {@link LocalTrack} encountered a warning.\n * This event is only raised if you enabled warnings using <code>notifyWarnings</code> in <code>ConnectOptions</code>.\n * @event LocalTrackPublication#warning\n * @param {string} name - The warning that was raised.\n */\n\n/**\n * The published {@link LocalTrack} cleared all warnings.\n * This event is only raised if you enabled warnings using <code>notifyWarnings</code> in <code>ConnectOptions</code>.\n * @event LocalTrackPublication#warningsCleared\n */\n\nmodule.exports = LocalTrackPublication;\n"]},"metadata":{},"sourceType":"script"}