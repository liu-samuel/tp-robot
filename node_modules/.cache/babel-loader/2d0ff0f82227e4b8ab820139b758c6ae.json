{"ast":null,"code":"'use strict';\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar MediaSignaling = require('./mediasignaling');\n/**\n * @emits TrackSwitchOffSignalinging#updated\n */\n\n\nvar TrackSwitchOffSignaling =\n/** @class */\nfunction (_super) {\n  __extends(TrackSwitchOffSignaling, _super);\n  /**\n   * Construct a {@link TrackSwitchOffSignaling}.\n   * @param {Promise<DataTrackReceiver>} getReceiver\n   */\n\n\n  function TrackSwitchOffSignaling(getReceiver, options) {\n    var _this = _super.call(this, getReceiver, 'track_switch_off', options) || this;\n\n    _this.on('ready', function (transport) {\n      transport.on('message', function (message) {\n        switch (message.type) {\n          case 'track_switch_off':\n            _this._setTrackSwitchOffUpdates(message.off || [], message.on || []);\n\n            break;\n\n          default:\n            break;\n        }\n      });\n    });\n\n    return _this;\n  }\n  /**\n   * @private\n   * @param {[Track.SID]} tracksSwitchedOff\n   * @param {[Track.SID]} tracksSwitchedOn\n   * @returns {void}\n   */\n\n\n  TrackSwitchOffSignaling.prototype._setTrackSwitchOffUpdates = function (tracksSwitchedOff, tracksSwitchedOn) {\n    this.emit('updated', tracksSwitchedOff, tracksSwitchedOn);\n  };\n\n  return TrackSwitchOffSignaling;\n}(MediaSignaling);\n/**\n * @event TrackSwitchOffSignaling#updated\n */\n\n\nmodule.exports = TrackSwitchOffSignaling;","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAMA,cAAc,GAAGC,OAAO,CAAC,kBAAD,CAA9B;AAEA;;;;;AAGA;AAAA;AAAA;EAAsCC;EACpC;;;;;;EAIA,iCAAYC,WAAZ,EAAyBC,OAAzB,EAAgC;IAAhC,YACEC,kBAAMF,WAAN,EAAmB,kBAAnB,EAAuCC,OAAvC,KAA+C,IADjD;;IAEEE,KAAI,CAACC,EAAL,CAAQ,OAAR,EAAiB,qBAAS;MACxBC,SAAS,CAACD,EAAV,CAAa,SAAb,EAAwB,mBAAO;QAC7B,QAAQE,OAAO,CAACC,IAAhB;UACE,KAAK,kBAAL;YACEJ,KAAI,CAACK,yBAAL,CAA+BF,OAAO,CAACG,GAAR,IAAe,EAA9C,EAAkDH,OAAO,CAACF,EAAR,IAAc,EAAhE;;YACA;;UACF;YACE;QALJ;MAOD,CARD;IASD,CAVD;;;EAWD;EAED;;;;;;;;EAMAM,wEAA0BC,iBAA1B,EAA6CC,gBAA7C,EAA6D;IAC3D,KAAKC,IAAL,CAAU,SAAV,EAAqBF,iBAArB,EAAwCC,gBAAxC;EACD,CAFD;;EAGF;AAAC,CA7BD,CAAsCf,cAAtC;AA+BA;;;;;AAIAiB,MAAM,CAACC,OAAP,GAAiBL,uBAAjB","names":["MediaSignaling","require","__extends","getReceiver","options","_super","_this","on","transport","message","type","_setTrackSwitchOffUpdates","off","TrackSwitchOffSignaling","tracksSwitchedOff","tracksSwitchedOn","emit","module","exports"],"sources":["/home/samliu/repos/ieee/tp-robot/node_modules/twilio-video/lib/signaling/v2/trackswitchoffsignaling.js"],"sourcesContent":["'use strict';\n\nconst MediaSignaling = require('./mediasignaling');\n\n/**\n * @emits TrackSwitchOffSignalinging#updated\n */\nclass TrackSwitchOffSignaling extends MediaSignaling {\n  /**\n   * Construct a {@link TrackSwitchOffSignaling}.\n   * @param {Promise<DataTrackReceiver>} getReceiver\n   */\n  constructor(getReceiver, options) {\n    super(getReceiver, 'track_switch_off', options);\n    this.on('ready', transport => {\n      transport.on('message', message => {\n        switch (message.type) {\n          case 'track_switch_off':\n            this._setTrackSwitchOffUpdates(message.off || [], message.on || []);\n            break;\n          default:\n            break;\n        }\n      });\n    });\n  }\n\n  /**\n   * @private\n   * @param {[Track.SID]} tracksSwitchedOff\n   * @param {[Track.SID]} tracksSwitchedOn\n   * @returns {void}\n   */\n  _setTrackSwitchOffUpdates(tracksSwitchedOff, tracksSwitchedOn) {\n    this.emit('updated', tracksSwitchedOff, tracksSwitchedOn);\n  }\n}\n\n/**\n * @event TrackSwitchOffSignaling#updated\n */\n\nmodule.exports = TrackSwitchOffSignaling;\n"]},"metadata":{},"sourceType":"script"}