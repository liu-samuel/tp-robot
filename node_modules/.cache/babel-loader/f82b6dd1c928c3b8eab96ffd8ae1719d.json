{"ast":null,"code":"'use strict';\n\nvar detectSilence = require('../webaudio/detectsilence');\n\nvar N_ATTEMPTS = 3;\nvar ATTEMPT_DURATION_MS = 250;\n/**\n * Detect whether the audio stream rendered by the given HTMLVideoElement is silent.\n * @param {HTMLAudioElement} el\n * @returns {Promise<boolean>} true if silent, false if not.\n */\n\nfunction detectSilentAudio(el) {\n  // NOTE(mmalavalli): We have to delay require-ing AudioContextFactory, because\n  // it exports a default instance whose constructor calls Object.assign.\n  var AudioContextFactory = require('../webaudio/audiocontext');\n\n  var holder = {};\n  var audioContext = AudioContextFactory.getOrCreate(holder);\n  var attemptsLeft = N_ATTEMPTS;\n\n  function doCheckSilence() {\n    attemptsLeft--;\n    return detectSilence(audioContext, el.srcObject, ATTEMPT_DURATION_MS).then(function (isSilent) {\n      if (!isSilent) {\n        return false;\n      }\n\n      if (attemptsLeft > 0) {\n        return doCheckSilence();\n      }\n\n      return true;\n    }).catch(function () {\n      // NOTE(mmalavalli): If an error is thrown while detect silence, the audio\n      // stream is assumed to be silent.\n      return true;\n    });\n  } // Resolve the returned Promise with true if 3 consecutive attempts\n  // to detect silent audio are successful.\n\n\n  return doCheckSilence().finally(function () {\n    AudioContextFactory.release(holder);\n  });\n}\n\nmodule.exports = detectSilentAudio;","map":{"version":3,"mappings":"AAAA;;AAEA,IAAMA,aAAa,GAAGC,OAAO,CAAC,2BAAD,CAA7B;;AAEA,IAAMC,UAAU,GAAG,CAAnB;AACA,IAAMC,mBAAmB,GAAG,GAA5B;AAEA;;;;;;AAKA,SAASC,iBAAT,CAA2BC,EAA3B,EAA6B;EAC3B;EACA;EACA,IAAMC,mBAAmB,GAAGL,OAAO,CAAC,0BAAD,CAAnC;;EACA,IAAMM,MAAM,GAAG,EAAf;EACA,IAAMC,YAAY,GAAGF,mBAAmB,CAACG,WAApB,CAAgCF,MAAhC,CAArB;EAEA,IAAIG,YAAY,GAAGR,UAAnB;;EAEA,SAASS,cAAT,GAAuB;IACrBD,YAAY;IACZ,OAAOV,aAAa,CAACQ,YAAD,EAAeH,EAAE,CAACO,SAAlB,EAA6BT,mBAA7B,CAAb,CAA+DU,IAA/D,CAAoE,oBAAQ;MACjF,IAAI,CAACC,QAAL,EAAe;QACb,OAAO,KAAP;MACD;;MACD,IAAIJ,YAAY,GAAG,CAAnB,EAAsB;QACpB,OAAOC,cAAc,EAArB;MACD;;MACD,OAAO,IAAP;IACD,CARM,EAQJI,KARI,CAQE;MACP;MACA;MACA,OAAO,IAAP;IACD,CAZM,CAAP;EAaD,CAxB0B,CA0B3B;EACA;;;EACA,OAAOJ,cAAc,GAAGK,OAAjB,CAAyB;IAC9BV,mBAAmB,CAACW,OAApB,CAA4BV,MAA5B;EACD,CAFM,CAAP;AAGD;;AAEDW,MAAM,CAACC,OAAP,GAAiBf,iBAAjB","names":["detectSilence","require","N_ATTEMPTS","ATTEMPT_DURATION_MS","detectSilentAudio","el","AudioContextFactory","holder","audioContext","getOrCreate","attemptsLeft","doCheckSilence","srcObject","then","isSilent","catch","finally","release","module","exports"],"sources":["/home/samliu/repos/ieee/tp-robot/node_modules/twilio-video/lib/util/detectsilentaudio.js"],"sourcesContent":["'use strict';\n\nconst detectSilence = require('../webaudio/detectsilence');\n\nconst N_ATTEMPTS = 3;\nconst ATTEMPT_DURATION_MS = 250;\n\n/**\n * Detect whether the audio stream rendered by the given HTMLVideoElement is silent.\n * @param {HTMLAudioElement} el\n * @returns {Promise<boolean>} true if silent, false if not.\n */\nfunction detectSilentAudio(el) {\n  // NOTE(mmalavalli): We have to delay require-ing AudioContextFactory, because\n  // it exports a default instance whose constructor calls Object.assign.\n  const AudioContextFactory = require('../webaudio/audiocontext');\n  const holder = {};\n  const audioContext = AudioContextFactory.getOrCreate(holder);\n\n  let attemptsLeft = N_ATTEMPTS;\n\n  function doCheckSilence() {\n    attemptsLeft--;\n    return detectSilence(audioContext, el.srcObject, ATTEMPT_DURATION_MS).then(isSilent => {\n      if (!isSilent) {\n        return false;\n      }\n      if (attemptsLeft > 0) {\n        return doCheckSilence();\n      }\n      return true;\n    }).catch(() => {\n      // NOTE(mmalavalli): If an error is thrown while detect silence, the audio\n      // stream is assumed to be silent.\n      return true;\n    });\n  }\n\n  // Resolve the returned Promise with true if 3 consecutive attempts\n  // to detect silent audio are successful.\n  return doCheckSilence().finally(() => {\n    AudioContextFactory.release(holder);\n  });\n}\n\nmodule.exports = detectSilentAudio;\n"]},"metadata":{},"sourceType":"script"}